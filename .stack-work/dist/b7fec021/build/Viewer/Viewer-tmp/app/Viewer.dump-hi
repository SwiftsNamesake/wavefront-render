
==================== FINAL INTERFACE ====================
2016-10-30 18:58:59.2206949 UTC

interface main@main:Main 8001
  interface hash: c1b2502f4bad7778ba6d02a27c377242
  ABI hash: 99367b80028da32b6f16be8c6a578e46
  export-list hash: 5f5c7899f5333b851851bb8776a4fb86
  orphan hash: f33f78c3be64b8f00fd9afb1b4effe22
  flag hash: 496b23c3d53b0a3d99aa3ebe7d885ad3
  sig of: Nothing
  used TH splices: True
  where
exports:
  Main.getJuicyPixel
  Main.loadTexture
  Main.loop
  Main.main
  Main.plane
  Main.planeXY
  Main.rotation
  Main.tick
  Main.triangles
  Main.App{Main.App fMatrixUniforms fMatrixValues fRasterOptions fScalarUniforms fScalarValues fVertices}
  Main.HasMatrixUniforms{Main.matrixUniforms}
  Main.HasMatrixValues{Main.matrixValues}
  Main.HasPrimitiveArray{Main.primitiveArray}
  Main.HasRasterOptions{Main.rasterOptions}
  Main.HasScalarUniforms{Main.scalarUniforms}
  Main.HasScalarValues{Main.scalarValues}
  Main.ShaderData{Main.ShaderData fPrimitiveArray fRasterOptions}
module dependencies:
package dependencies: Boolean-0.2.3@Boolean-0.2.3-JYotQglXhtoJXpADNau8XH
                      Cartesian-0.6.0.0@Cartesian-0.6.0.0-4fTey2HFasTDmC98lzZMfA
                      GLFW-b-1.4.8.0@GLFW-b-1.4.8.0-Gmzj4oUBhnKD32OQw4NQ6E
                      GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3
                      GPipe-GLFW-1.2.2@GPipe-GLFW-1.2.2-6232VZYnIeU99Wr06Pg0kV
                      JuicyPixels-3.2.8@JuicyPixels-3.2.8-9uHBpWezY2019Abc9ekAG4
                      Leibniz-0.1.0.0@Leibniz-0.1.0.0-DW2L1DprBeSKynMxEzKTO7
                      MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov
                      StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      WaveFront-0.5.0.0@WaveFront-0.5.0.0-Kz1vHExcfrYFo1L9lXsaRQ
                      Win32-2.3.1.1@Win32-2.3.1.1
                      adjunctions-4.3@adjunctions-4.3-2gOdikP4TOk6bCl4TQTnzP
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe
                      base-4.9.0.0
                      base-orphans-0.5.4@base-orphans-0.5.4-5IQvrjd7gNP548VkOOyIq6
                      bifunctors-5.4.1@bifunctors-5.4.1-HvoG75ThrcWDYR8vpQmEIR
                      binary-0.8.3.0@binary-0.8.3.0
                      bindings-GLFW-3.1.2.1@bindings-GLFW-3.1.2.1-EpEQPrBETXbHge6MCAHKU9
                      bytes-0.15.2@bytes-0.15.2-IB52XL1ksse9uNrzOlF6cm
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      cereal-0.5.3.0@cereal-0.5.3.0-90KodwwwQanJlL7equBhpB
                      comonad-5@comonad-5-28DG7R8USeHKXowIkMq8ME
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-8JKfZTNGDL78gUMj4VH9zF
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      distributive-0.5.0.2@distributive-0.5.0.2-Cdz2vLOk85j1doGXLcictT
                      either-4.4.1.1@either-4.4.1.1-I09NwJjDIpj9gPsk9oKU10
                      exception-transformers-0.4.0.4@exception-transformers-0.4.0.4-C00vMqc72BtDLvKuDRK0DO
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      filepath-1.4.1.0@filepath-1.4.1.0
                      fixed-0.2.1.1@fixed-0.2.1.1-21JkkJmr6h52cZo1o8cauA
                      free-4.12.4@free-4.12.4-22LY0NU51Vg7aGggSxs79k
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      gl-0.7.8.1@gl-0.7.8.1-8WF8b9HwcEZHHkXutWG2O4
                      half-0.2.2.3@half-0.2.2.3-BFHx0LiJemg6baNXrjGThF
                      hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2
                      hashtables-1.2.1.0@hashtables-1.2.1.0-1ucWEA6Tnj1XvKrOj82Ys
                      integer-gmp-1.0.0.1
                      kan-extensions-5.0.1@kan-extensions-5.0.1-GYEaMv0JiPBGPZb4bmgUOV
                      lens-4.14@lens-4.14-Gsq1wheYKVF1nI09AJ4K1O
                      linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ
                      mmorph-1.0.6@mmorph-1.0.6-3xsw6wg6Vs2JmwrJVsaYA0
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-FAyB4iuuM7cHXdrLMZtdXq
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      profunctors-5.2@profunctors-5.2-JnOEqUUdt7sDImdYBNlUtM
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      reflection-2.1.2@reflection-2.1.2-J1ZzlxijzaHGRixYxgxlf9
                      scientific-0.3.4.9@scientific-0.3.4.9-ENrtAw13zTS8y4klTK3l4D
                      semigroupoids-5.1@semigroupoids-5.1-32rwI6PLPTkCNOcLloOhLy
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-81lZyuOJOvsD0zyCv2TKld
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-9LORRyFpDhM8ZtazbO2Bhp
                      vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3
                      zlib-0.6.1.1@zlib-0.6.1.1-4cYT5jyS3jw6zZyCUZMz3T
orphans: GLFW-b-1.4.8.0@GLFW-b-1.4.8.0-Gmzj4oUBhnKD32OQw4NQ6E:Graphics.UI.GLFW.Types
         GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.Orphans
         MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov:Control.Monad.Random
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2:Data.Hashable.Generic
         linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.Instances
         reflection-2.1.2@reflection-2.1.2-J1ZzlxijzaHGRixYxgxlf9:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Unboxed
family instance modules: Boolean-0.2.3@Boolean-0.2.3-JYotQglXhtoJXpADNau8XH:Data.Boolean
                         GLFW-b-1.4.8.0@GLFW-b-1.4.8.0-Gmzj4oUBhnKD32OQw4NQ6E:Graphics.UI.GLFW.Types
                         GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.Buffer
                         GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.Expr
                         GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.Format
                         GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.FragmentStream
                         GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.Orphans
                         GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.PrimitiveStream
                         GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.Uniform
                         JuicyPixels-3.2.8@JuicyPixels-3.2.8-9uHBpWezY2019Abc9ekAG4:Codec.Picture.Tga
                         JuicyPixels-3.2.8@JuicyPixels-3.2.8-9uHBpWezY2019Abc9ekAG4:Codec.Picture.Tiff
                         JuicyPixels-3.2.8@JuicyPixels-3.2.8-9uHBpWezY2019Abc9ekAG4:Codec.Picture.Types
                         adjunctions-4.3@adjunctions-4.3-2gOdikP4TOk6bCl4TQTnzP:Data.Functor.Rep
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.Functor.Sum
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         bifunctors-5.4.1@bifunctors-5.4.1-HvoG75ThrcWDYR8vpQmEIR:Data.Bifunctor.Biff
                         bifunctors-5.4.1@bifunctors-5.4.1-HvoG75ThrcWDYR8vpQmEIR:Data.Bifunctor.Clown
                         bifunctors-5.4.1@bifunctors-5.4.1-HvoG75ThrcWDYR8vpQmEIR:Data.Bifunctor.Flip
                         bifunctors-5.4.1@bifunctors-5.4.1-HvoG75ThrcWDYR8vpQmEIR:Data.Bifunctor.Join
                         bifunctors-5.4.1@bifunctors-5.4.1-HvoG75ThrcWDYR8vpQmEIR:Data.Bifunctor.Joker
                         bifunctors-5.4.1@bifunctors-5.4.1-HvoG75ThrcWDYR8vpQmEIR:Data.Bifunctor.Product
                         bifunctors-5.4.1@bifunctors-5.4.1-HvoG75ThrcWDYR8vpQmEIR:Data.Bifunctor.Sum
                         bifunctors-5.4.1@bifunctors-5.4.1-HvoG75ThrcWDYR8vpQmEIR:Data.Bifunctor.Tannen
                         bifunctors-5.4.1@bifunctors-5.4.1-HvoG75ThrcWDYR8vpQmEIR:Data.Bifunctor.Wrapped
                         bytes-0.15.2@bytes-0.15.2-IB52XL1ksse9uNrzOlF6cm:Data.Bytes.Get
                         bytes-0.15.2@bytes-0.15.2-IB52XL1ksse9uNrzOlF6cm:Data.Bytes.Signed
                         bytes-0.15.2@bytes-0.15.2-IB52XL1ksse9uNrzOlF6cm:Data.Bytes.VarInt
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         either-4.4.1.1@either-4.4.1.1-I09NwJjDIpj9gPsk9oKU10:Control.Monad.Trans.Either
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         kan-extensions-5.0.1@kan-extensions-5.0.1-GYEaMv0JiPBGPZb4bmgUOV:Data.Functor.Day
                         kan-extensions-5.0.1@kan-extensions-5.0.1-GYEaMv0JiPBGPZb4bmgUOV:Data.Functor.Yoneda
                         lens-4.14@lens-4.14-Gsq1wheYKVF1nI09AJ4K1O:Control.Lens.At
                         lens-4.14@lens-4.14-Gsq1wheYKVF1nI09AJ4K1O:Control.Lens.Internal.Indexed
                         lens-4.14@lens-4.14-Gsq1wheYKVF1nI09AJ4K1O:Control.Lens.Reified
                         lens-4.14@lens-4.14-Gsq1wheYKVF1nI09AJ4K1O:Control.Lens.Tuple
                         lens-4.14@lens-4.14-Gsq1wheYKVF1nI09AJ4K1O:Control.Lens.Wrapped
                         lens-4.14@lens-4.14-Gsq1wheYKVF1nI09AJ4K1O:Control.Lens.Zoom
                         linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.Affine
                         linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.Plucker
                         linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.Quaternion
                         linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.V
                         linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.V0
                         linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.V1
                         linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.V2
                         linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.V3
                         linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.V4
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         profunctors-5.2@profunctors-5.2-JnOEqUUdt7sDImdYBNlUtM:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-9LORRyFpDhM8ZtazbO2Bhp:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-9LORRyFpDhM8ZtazbO2Bhp:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Unboxed.Base
                         zlib-0.6.1.1@zlib-0.6.1.1-4cYT5jyS3jw6zZyCUZMz3T:Codec.Compression.Zlib.Stream
import  -/  GLFW-b-1.4.8.0@GLFW-b-1.4.8.0-Gmzj4oUBhnKD32OQw4NQ6E:Graphics.UI.GLFW 4c24239d69833d2ef49739cd266b78af
import  -/  GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe f6bb895efb3cd68a0f14ab9b67a99567
import  -/  GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.Buffer 203ec1f36fcba51b521c00a1ad9d0ded
import  -/  GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.Context 3bc87a623d44bdb4536c91b5ab839987
import  -/  GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.Expr 68d4f14621d37ef1835f542c8bf3f1dc
import  -/  GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.Format 5570006182360cf356099920aed518bc
import  -/  GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.FragmentStream a9a45afcae5e4347bf34eb66347a8f9f
import  -/  GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.FrameBuffer f355fdc9b8f17a847b7b05dbf06b4743
import  -/  GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.PrimitiveArray 1055467c014bfe1787372eded858e908
import  -/  GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.PrimitiveStream b8a97b520c6dcad5a88d6726fd33643c
import  -/  GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.Shader 45e0ccba95aa353e181f7ef42342d485
import  -/  GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.Texture e99bfd1679b8e4f3b5ecb7597d9320cc
import  -/  GPipe-2.1.8@GPipe-2.1.8-5pITOF5sMhw7irBqXNKjU3:Graphics.GPipe.Internal.Uniform 5374f1a542425da9de764113925a97db
import  -/  GPipe-GLFW-1.2.2@GPipe-GLFW-1.2.2-6232VZYnIeU99Wr06Pg0kV:Graphics.GPipe.Context.GLFW 9c938c555e85162507d03eb46b32e98a
import  -/  GPipe-GLFW-1.2.2@GPipe-GLFW-1.2.2-6232VZYnIeU99Wr06Pg0kV:Graphics.GPipe.Context.GLFW.Input cc9bba26b56aac7d82974e75f3d35c59
import  -/  GPipe-GLFW-1.2.2@GPipe-GLFW-1.2.2-6232VZYnIeU99Wr06Pg0kV:Graphics.GPipe.Context.GLFW.Resource e49df6434b77cefa06d64459fb949e6f
import  -/  GPipe-GLFW-1.2.2@GPipe-GLFW-1.2.2-6232VZYnIeU99Wr06Pg0kV:Graphics.GPipe.Context.GLFW.Unsafe c4dc0607e8be116733f4d81d87c73eb1
import  -/  JuicyPixels-3.2.8@JuicyPixels-3.2.8-9uHBpWezY2019Abc9ekAG4:Codec.Picture 689d905679d7630c0d5d40e0fa7a153c
import  -/  JuicyPixels-3.2.8@JuicyPixels-3.2.8-9uHBpWezY2019Abc9ekAG4:Codec.Picture.Types 453033ada38e198d9259723f8cd9579e
import  -/  Leibniz-0.1.0.0@Leibniz-0.1.0.0-DW2L1DprBeSKynMxEzKTO7:Leibniz 3068849730144d2955b79fdcc9105ea5
import  -/  Leibniz-0.1.0.0@Leibniz-0.1.0.0-DW2L1DprBeSKynMxEzKTO7:Leibniz.Constants 8c5ea30d6c9648b82b0b5435af34d6b6
import  -/  WaveFront-0.5.0.0@WaveFront-0.5.0.0-Kz1vHExcfrYFo1L9lXsaRQ:Graphics.WaveFront fb741edb160345925a60bfb395b9b398
import  -/  WaveFront-0.5.0.0@WaveFront-0.5.0.0-Kz1vHExcfrYFo1L9lXsaRQ:Graphics.WaveFront.Lenses 976679016e79c5767bf4fef8fcc84928
import  -/  WaveFront-0.5.0.0@WaveFront-0.5.0.0-Kz1vHExcfrYFo1L9lXsaRQ:Graphics.WaveFront.Load 0f3fdbe4c677cc64ce8df38107568148
import  -/  WaveFront-0.5.0.0@WaveFront-0.5.0.0-Kz1vHExcfrYFo1L9lXsaRQ:Graphics.WaveFront.Model 3ef9865a0af5f588d728437d3c9c1cc2
import  -/  base-4.9.0.0:Control.Applicative fdcece230f8af145aec7b432bfe73083
import  -/  base-4.9.0.0:Control.Arrow 1ad0e235ca96a02d05ff19477912bb7e
import  -/  base-4.9.0.0:Control.Monad b6b2f076948b5e8acd6d95beb4d22bfc
import  -/  base-4.9.0.0:Control.Monad.IO.Class 6093ce5ace985d5ea81901bb51e28805
import  -/  base-4.9.0.0:Data.Either 4cef602ce360a0155ac0dd580a5b4863
import  -/  base-4.9.0.0:Data.Foldable 3cbed01c922be29649c33015287c82ca
import  -/  base-4.9.0.0:Data.Function 2d30bad1e59b32e49b27f71226717080
import  -/  base-4.9.0.0:Data.Functor 67cebb006c069ea73adcd2d468cdb0dc
import  -/  base-4.9.0.0:Data.Maybe 086a84053ef7f7810663b5f03b7ec3f7
import  -/  base-4.9.0.0:Data.Monoid 6756b44c170e445e254f1a1c3e59ccfa
import  -/  base-4.9.0.0:Data.Traversable 578f976513fd28b7f58c156ea20c192a
import  -/  base-4.9.0.0:Data.Tuple 84c2bcc75b7a239341ae2f88cce9d8d7
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.Enum dab7089478c738f0ffbf72212d9113c9
import  -/  base-4.9.0.0:GHC.Err 20faef8829fd13c027d0ee2213637534
import  -/  base-4.9.0.0:GHC.Float a46e197015eefaa013d7004e58481c54
import  -/  base-4.9.0.0:GHC.IO 1429985c1cb03cc0778fa4876799f1d2
import  -/  base-4.9.0.0:GHC.List 47d436dfb7454bb1883fb4d943e3f389
import  -/  base-4.9.0.0:GHC.Num f0aed3315b3ed1b330b71fc4148a5581
import  -/  base-4.9.0.0:GHC.Real 011de9ca3282ad24a84e4e15f974f98e
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  base-4.9.0.0:System.IO c1068c4f4231e3198e330f99a58145b0
import  -/  base-4.9.0.0:Text.Printf b1795943fe732750188700e17d6d73c7
import  -/  filepath-1.4.1.0@filepath-1.4.1.0:System.FilePath 9880a793241cd27255e7623883822ffe
import  -/  filepath-1.4.1.0@filepath-1.4.1.0:System.FilePath.Windows 98ce57fe3cf93336fee5ce01e3374170
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  lens-4.14@lens-4.14-Gsq1wheYKVF1nI09AJ4K1O:Control.Lens eb9a3abcd309530963d63507420869d1
import  -/  lens-4.14@lens-4.14-Gsq1wheYKVF1nI09AJ4K1O:Control.Lens.At 523b7e9c9ef8dbc542ea3b4237b8b483
import  -/  lens-4.14@lens-4.14-Gsq1wheYKVF1nI09AJ4K1O:Control.Lens.Getter 2ef978bdaf5f23b7a66425fc1c18f9d7
import  -/  lens-4.14@lens-4.14-Gsq1wheYKVF1nI09AJ4K1O:Control.Lens.Setter d25bb703708742ce57e4f7f766f8121f
import  -/  lens-4.14@lens-4.14-Gsq1wheYKVF1nI09AJ4K1O:Control.Lens.TH e50836c61f67ab0756d063f5b550cbba
import  -/  lens-4.14@lens-4.14-Gsq1wheYKVF1nI09AJ4K1O:Control.Lens.Type d5631099737d4dacf29ffce1a4f1e08a
import  -/  linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear 3321ca82ae197cb20bdb5eb60684c98b
import  -/  linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.Matrix 0096b335770e59854d138b86787574a4
import  -/  linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.Projection bd0340fe382550c51a4055251d2af48a
import  -/  linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.Quaternion e84027d196c4553a840097fca6c4a93e
import  -/  linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.V2 da9769173846cba040c710c571629740
import  -/  linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.V3 3246c2bdc513fc56792cff12fbddef69
import  -/  linear-1.20.5@linear-1.20.5-586MnWmU3PpFRx1fWdLTFJ:Linear.V4 324f149efcc680cdefd16bd002096247
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text 769c914c1985c5c356af906de5892ffb
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show 3049a8f25f7c9aebcb9df326a54841cb
import  -/  vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector b448c5ab24c67fa0517ca5f0377fbdc9
edbf80db83d3b8ac0dc9d823210399c5
  $fHasMatrixUniformsAppBuffer ::
    Main.HasMatrixUniforms
      (Main.App os0 f0)
      (Graphics.GPipe.Internal.Buffer.Buffer
         os0
         (Graphics.GPipe.Internal.Buffer.Uniform
            (Linear.Matrix.M44
               (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))))
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fHasMatrixUniformsAppBuffer_$cmatrixUniforms
                  `cast`
                (forall (os :: <*>_N) (f :: <*>_N).
                 Sym (Main.N:HasMatrixUniforms[0]
                          <Main.App os f>_N
                          <Graphics.GPipe.Internal.Buffer.Buffer
                             os
                             (Graphics.GPipe.Internal.Buffer.Uniform
                                (Linear.Matrix.M44
                                   (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))>_N)) -}
dcb838f1a0c02489b3184c4a8262ee87
  $fHasMatrixUniformsAppBuffer_$cmatrixUniforms ::
    Control.Lens.Type.Lens'
      (Main.App os f)
      (Graphics.GPipe.Internal.Buffer.Buffer
         os
         (Graphics.GPipe.Internal.Buffer.Uniform
            (Linear.Matrix.M44
               (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))))
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ os
                   @ f
                   @ (f1 :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f1)
                   (f2 :: Graphics.GPipe.Internal.Buffer.Buffer
                            os
                            (Graphics.GPipe.Internal.Buffer.Uniform
                               (Linear.Matrix.M44
                                  (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
                          -> f1 (Graphics.GPipe.Internal.Buffer.Buffer
                                   os
                                   (Graphics.GPipe.Internal.Buffer.Uniform
                                      (Linear.Matrix.M44
                                         (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))))
                   (ds :: Main.App os f) ->
                 case ds of wild { Main.App x1 x2 x3 x4 x5 x6 ->
                 GHC.Base.fmap
                   @ f1
                   $dFunctor
                   @ (Graphics.GPipe.Internal.Buffer.Buffer
                        os
                        (Graphics.GPipe.Internal.Buffer.Uniform
                           (Linear.Matrix.M44
                              (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))))
                   @ (Main.App os f)
                   (\ (y1 :: Graphics.GPipe.Internal.Buffer.Buffer
                               os
                               (Graphics.GPipe.Internal.Buffer.Uniform
                                  (Linear.Matrix.M44
                                     (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))) ->
                    Main.App @ os @ f x1 y1 x3 x4 x5 x6)
                   (f2 x2) }) -}
e8398b51bd5b71321a2815204b65547f
  $fHasMatrixValuesApp[] ::
    Main.HasMatrixValues
      (Main.App os0 f0) [Linear.Matrix.M44 GHC.Types.Float]
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fHasMatrixValuesApp[]_$cmatrixValues
                  `cast`
                (forall (os :: <*>_N) (f :: <*>_N).
                 Sym (Main.N:HasMatrixValues[0]
                          <Main.App os f>_N <[Linear.Matrix.M44 GHC.Types.Float]>_N)) -}
dd23826ab69811a9a95e0e03d335e1d5
  $fHasMatrixValuesApp[]_$cmatrixValues ::
    Control.Lens.Type.Lens'
      (Main.App os f) [Linear.Matrix.M44 GHC.Types.Float]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ os
                   @ f
                   @ (f1 :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f1)
                   (f2 :: [Linear.Matrix.M44 GHC.Types.Float]
                          -> f1 [Linear.Matrix.M44 GHC.Types.Float])
                   (ds :: Main.App os f) ->
                 case ds of wild { Main.App x1 x2 x3 x4 x5 x6 ->
                 GHC.Base.fmap
                   @ f1
                   $dFunctor
                   @ [Linear.Matrix.M44 GHC.Types.Float]
                   @ (Main.App os f)
                   (\ (y1 :: [Linear.Matrix.M44 GHC.Types.Float]) ->
                    Main.App @ os @ f x1 x2 x3 x4 y1 x6)
                   (f2 x5) }) -}
75ebbfd45a8f94ec22cc1a2d14e70ee1
  $fHasPrimitiveArrayShaderDataPrimitiveArray ::
    Main.HasPrimitiveArray
      Main.ShaderData
      (Graphics.GPipe.Internal.PrimitiveArray.PrimitiveArray
         Graphics.GPipe.Internal.PrimitiveArray.Triangles
         (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
          Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float))
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fHasPrimitiveArrayShaderDataPrimitiveArray_$cprimitiveArray
                  `cast`
                (Sym (Main.N:HasPrimitiveArray[0]
                          <Main.ShaderData>_N
                          <Graphics.GPipe.Internal.PrimitiveArray.PrimitiveArray
                             Graphics.GPipe.Internal.PrimitiveArray.Triangles
                             (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
                              Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)>_N)) -}
80d660661c1875cf2f01b1581c330f42
  $fHasPrimitiveArrayShaderDataPrimitiveArray_$cprimitiveArray ::
    Control.Lens.Type.Lens'
      Main.ShaderData
      (Graphics.GPipe.Internal.PrimitiveArray.PrimitiveArray
         Graphics.GPipe.Internal.PrimitiveArray.Triangles
         (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
          Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float))
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Graphics.GPipe.Internal.PrimitiveArray.PrimitiveArray
                            Graphics.GPipe.Internal.PrimitiveArray.Triangles
                            (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
                             Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)
                          -> f (Graphics.GPipe.Internal.PrimitiveArray.PrimitiveArray
                                  Graphics.GPipe.Internal.PrimitiveArray.Triangles
                                  (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
                                   Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)))
                   (ds :: Main.ShaderData) ->
                 case ds of wild { Main.ShaderData x1 x2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (Graphics.GPipe.Internal.PrimitiveArray.PrimitiveArray
                        Graphics.GPipe.Internal.PrimitiveArray.Triangles
                        (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
                         Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float))
                   @ Main.ShaderData
                   (\ (y1 :: Graphics.GPipe.Internal.PrimitiveArray.PrimitiveArray
                               Graphics.GPipe.Internal.PrimitiveArray.Triangles
                               (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
                                Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)) ->
                    Main.ShaderData y1 x2)
                   (f1 x1) }) -}
4522f32a2132c650bbdb6626e211951f
  $fHasRasterOptionsApp(,,) ::
    Main.HasRasterOptions
      (Main.App os0 f0)
      (Graphics.GPipe.Internal.FragmentStream.Side,
       Graphics.GPipe.Internal.FragmentStream.ViewPort,
       Graphics.GPipe.Internal.FragmentStream.DepthRange)
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fHasRasterOptionsApp(,,)_$crasterOptions
                  `cast`
                (forall (os :: <*>_N) (f :: <*>_N).
                 Sym (Main.N:HasRasterOptions[0]
                          <Main.App os f>_N
                          <(Graphics.GPipe.Internal.FragmentStream.Side,
                            Graphics.GPipe.Internal.FragmentStream.ViewPort,
                            Graphics.GPipe.Internal.FragmentStream.DepthRange)>_N)) -}
88990e3b50cf5f40159e308162beed9a
  $fHasRasterOptionsApp(,,)_$crasterOptions ::
    Control.Lens.Type.Lens'
      (Main.App os f)
      (Graphics.GPipe.Internal.FragmentStream.Side,
       Graphics.GPipe.Internal.FragmentStream.ViewPort,
       Graphics.GPipe.Internal.FragmentStream.DepthRange)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ os
                   @ f
                   @ (f1 :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f1)
                   (f2 :: (Graphics.GPipe.Internal.FragmentStream.Side,
                           Graphics.GPipe.Internal.FragmentStream.ViewPort,
                           Graphics.GPipe.Internal.FragmentStream.DepthRange)
                          -> f1 (Graphics.GPipe.Internal.FragmentStream.Side,
                                 Graphics.GPipe.Internal.FragmentStream.ViewPort,
                                 Graphics.GPipe.Internal.FragmentStream.DepthRange))
                   (ds :: Main.App os f) ->
                 case ds of wild { Main.App x1 x2 x3 x4 x5 x6 ->
                 GHC.Base.fmap
                   @ f1
                   $dFunctor
                   @ (Graphics.GPipe.Internal.FragmentStream.Side,
                      Graphics.GPipe.Internal.FragmentStream.ViewPort,
                      Graphics.GPipe.Internal.FragmentStream.DepthRange)
                   @ (Main.App os f)
                   (\ (y1 :: (Graphics.GPipe.Internal.FragmentStream.Side,
                              Graphics.GPipe.Internal.FragmentStream.ViewPort,
                              Graphics.GPipe.Internal.FragmentStream.DepthRange)) ->
                    Main.App @ os @ f x1 x2 x3 y1 x5 x6)
                   (f2 x4) }) -}
4522f32a2132c650bbdb6626e211951f
  $fHasRasterOptionsShaderData(,,) ::
    Main.HasRasterOptions
      Main.ShaderData
      (Graphics.GPipe.Internal.FragmentStream.Side,
       Graphics.GPipe.Internal.FragmentStream.ViewPort,
       Graphics.GPipe.Internal.FragmentStream.DepthRange)
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fHasRasterOptionsShaderData(,,)_$crasterOptions
                  `cast`
                (Sym (Main.N:HasRasterOptions[0]
                          <Main.ShaderData>_N
                          <(Graphics.GPipe.Internal.FragmentStream.Side,
                            Graphics.GPipe.Internal.FragmentStream.ViewPort,
                            Graphics.GPipe.Internal.FragmentStream.DepthRange)>_N)) -}
3a664d3fb8d4ff5578f5c58604576512
  $fHasRasterOptionsShaderData(,,)_$crasterOptions ::
    Control.Lens.Type.Lens'
      Main.ShaderData
      (Graphics.GPipe.Internal.FragmentStream.Side,
       Graphics.GPipe.Internal.FragmentStream.ViewPort,
       Graphics.GPipe.Internal.FragmentStream.DepthRange)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: (Graphics.GPipe.Internal.FragmentStream.Side,
                           Graphics.GPipe.Internal.FragmentStream.ViewPort,
                           Graphics.GPipe.Internal.FragmentStream.DepthRange)
                          -> f (Graphics.GPipe.Internal.FragmentStream.Side,
                                Graphics.GPipe.Internal.FragmentStream.ViewPort,
                                Graphics.GPipe.Internal.FragmentStream.DepthRange))
                   (ds :: Main.ShaderData) ->
                 case ds of wild { Main.ShaderData x1 x2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (Graphics.GPipe.Internal.FragmentStream.Side,
                      Graphics.GPipe.Internal.FragmentStream.ViewPort,
                      Graphics.GPipe.Internal.FragmentStream.DepthRange)
                   @ Main.ShaderData
                   (\ (y1 :: (Graphics.GPipe.Internal.FragmentStream.Side,
                              Graphics.GPipe.Internal.FragmentStream.ViewPort,
                              Graphics.GPipe.Internal.FragmentStream.DepthRange)) ->
                    Main.ShaderData x1 y1)
                   (f1 x2) }) -}
38fe17e69f08a93abb304ce05bb8e04c
  $fHasScalarUniformsAppBuffer ::
    Main.HasScalarUniforms
      (Main.App os0 f0)
      (Graphics.GPipe.Internal.Buffer.Buffer
         os0
         (Graphics.GPipe.Internal.Buffer.Uniform
            (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fHasScalarUniformsAppBuffer_$cscalarUniforms
                  `cast`
                (forall (os :: <*>_N) (f :: <*>_N).
                 Sym (Main.N:HasScalarUniforms[0]
                          <Main.App os f>_N
                          <Graphics.GPipe.Internal.Buffer.Buffer
                             os
                             (Graphics.GPipe.Internal.Buffer.Uniform
                                (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))>_N)) -}
da3ecf0ecb8e308abf455e90cfc2868f
  $fHasScalarUniformsAppBuffer_$cscalarUniforms ::
    Control.Lens.Type.Lens'
      (Main.App os f)
      (Graphics.GPipe.Internal.Buffer.Buffer
         os
         (Graphics.GPipe.Internal.Buffer.Uniform
            (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ os
                   @ f
                   @ (f1 :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f1)
                   (f2 :: Graphics.GPipe.Internal.Buffer.Buffer
                            os
                            (Graphics.GPipe.Internal.Buffer.Uniform
                               (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
                          -> f1 (Graphics.GPipe.Internal.Buffer.Buffer
                                   os
                                   (Graphics.GPipe.Internal.Buffer.Uniform
                                      (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))))
                   (ds :: Main.App os f) ->
                 case ds of wild { Main.App x1 x2 x3 x4 x5 x6 ->
                 GHC.Base.fmap
                   @ f1
                   $dFunctor
                   @ (Graphics.GPipe.Internal.Buffer.Buffer
                        os
                        (Graphics.GPipe.Internal.Buffer.Uniform
                           (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
                   @ (Main.App os f)
                   (\ (y1 :: Graphics.GPipe.Internal.Buffer.Buffer
                               os
                               (Graphics.GPipe.Internal.Buffer.Uniform
                                  (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))) ->
                    Main.App @ os @ f x1 x2 y1 x4 x5 x6)
                   (f2 x3) }) -}
99c56a6fa50e64ad36d5fd9750439073
  $fHasScalarValuesApp[] ::
    Main.HasScalarValues (Main.App os0 f0) [GHC.Types.Float]
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fHasScalarValuesApp[]_$cscalarValues
                  `cast`
                (forall (os :: <*>_N) (f :: <*>_N).
                 Sym (Main.N:HasScalarValues[0]
                          <Main.App os f>_N <[GHC.Types.Float]>_N)) -}
c9157366d16e28a125b39e0934d5b841
  $fHasScalarValuesApp[]_$cscalarValues ::
    Control.Lens.Type.Lens' (Main.App os f) [GHC.Types.Float]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ os
                   @ f
                   @ (f1 :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f1)
                   (f2 :: [GHC.Types.Float] -> f1 [GHC.Types.Float])
                   (ds :: Main.App os f) ->
                 case ds of wild { Main.App x1 x2 x3 x4 x5 x6 ->
                 GHC.Base.fmap
                   @ f1
                   $dFunctor
                   @ [GHC.Types.Float]
                   @ (Main.App os f)
                   (\ (y1 :: [GHC.Types.Float]) ->
                    Main.App @ os @ f x1 x2 x3 x4 x5 y1)
                   (f2 x6) }) -}
2047f13b6ab2fb025d08219cf8c293b1
  $fHasVerticesAppBuffer ::
    Graphics.WaveFront.Lenses.HasVertices
      (Main.App os0 f0)
      (Graphics.GPipe.Internal.Buffer.Buffer
         os0
         (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
          Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float))
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fHasVerticesAppBuffer_$cvertices
                  `cast`
                (forall (os :: <*>_N) (f :: <*>_N).
                 Sym (Graphics.WaveFront.Lenses.N:HasVertices[0]
                          <Main.App os f>_N
                          <Graphics.GPipe.Internal.Buffer.Buffer
                             os
                             (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
                              Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)>_N)) -}
2047f13b6ab2fb025d08219cf8c293b1
  $fHasVerticesAppBuffer_$cvertices ::
    Control.Lens.Type.Lens'
      (Main.App os f)
      (Graphics.GPipe.Internal.Buffer.Buffer
         os
         (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
          Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float))
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ os
                   @ f
                   @ (f1 :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f1)
                   (f2 :: Graphics.GPipe.Internal.Buffer.Buffer
                            os
                            (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
                             Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)
                          -> f1 (Graphics.GPipe.Internal.Buffer.Buffer
                                   os
                                   (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
                                    Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)))
                   (ds :: Main.App os f) ->
                 case ds of wild { Main.App x1 x2 x3 x4 x5 x6 ->
                 GHC.Base.fmap
                   @ f1
                   $dFunctor
                   @ (Graphics.GPipe.Internal.Buffer.Buffer
                        os
                        (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
                         Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float))
                   @ (Main.App os f)
                   (\ (y1 :: Graphics.GPipe.Internal.Buffer.Buffer
                               os
                               (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
                                Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)) ->
                    Main.App @ os @ f y1 x2 x3 x4 x5 x6)
                   (f2 x1) }) -}
5db88e8925781d885b1ebb0cb0e908dc
  $s$fBufferFormat(,) ::
    Graphics.GPipe.Internal.Buffer.BufferFormat
      (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
       Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
                     Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)
                  (Graphics.GPipe.Internal.Buffer.$fBufferFormat(,)_$ctoBuffer
                     @ (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float)
                     @ (Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)
                     Graphics.GPipe.Internal.Buffer.$fBufferFormatB4
                     Graphics.GPipe.Internal.Buffer.$fBufferFormatB2)
                  Main.$s$fBufferFormat(,)_$s$fBufferFormat(,)_$cgetGlType
                  Main.$s$fBufferFormat(,)_$s$fBufferFormat(,)_$cpeekPixel
                  Main.$s$fBufferFormat(,)_$s$fBufferFormat(,)_$cgetGlPaddedFormat -}
fcbb83fb331138180eeb5d2611e47c00
  $s$fBufferFormat(,)_$s$fBufferFormat(,)_$cgetGlPaddedFormat ::
    (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
     Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)
    -> Graphics.GL.Types.GLenum
  {- Strictness: x,
     Unfolding: InlineRule (0, True, True)
                (Graphics.GPipe.Internal.Buffer.$fBufferFormat(,)1
                   @ (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float)
                   @ (Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)) -}
1b8842f0cb2edcc65d597fd82b455537
  $s$fBufferFormat(,)_$s$fBufferFormat(,)_$cgetGlType ::
    (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
     Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)
    -> Graphics.GL.Types.GLenum
  {- Strictness: x,
     Unfolding: InlineRule (0, True, True)
                (Graphics.GPipe.Internal.Buffer.$fBufferFormat(,)3
                   @ (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float)
                   @ (Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)) -}
a836b962a00493ed826f9e546f4d68cb
  $s$fBufferFormat(,)_$s$fBufferFormat(,)_$cpeekPixel ::
    (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
     Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)
    -> GHC.Ptr.Ptr ()
    -> GHC.Types.IO
         (Graphics.GPipe.Internal.Buffer.HostFormat
            (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
             Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float))
  {- Strictness: x,
     Unfolding: InlineRule (0, True, True)
                (Graphics.GPipe.Internal.Buffer.$fBufferFormat(,)2
                   @ (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float)
                   @ (Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)) -}
efb92f994aa5471bc98b6db332d10c9b
  $s$fBufferFormatNormalized ::
    Graphics.GPipe.Internal.Buffer.BufferFormat
      (Graphics.GPipe.Internal.Buffer.Normalized
         (Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Graphics.GPipe.Internal.Buffer.Normalized
                       (Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8))
                  (Graphics.GPipe.Internal.Buffer.$fBufferFormatNormalized_$ctoBuffer
                     @ (Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8)
                     Graphics.GPipe.Internal.Buffer.$fBufferFormatB30)
                  Main.$s$fBufferFormatNormalized_$s$fBufferFormatNormalized_$cgetGlType
                  Main.$s$fBufferFormatNormalized_$s$fBufferFormatNormalized_$cpeekPixel
                  (Graphics.GPipe.Internal.Buffer.$fBufferFormatNormalized_$cgetGlPaddedFormat
                     @ (Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8)
                     Graphics.GPipe.Internal.Buffer.$fBufferFormatB30) -}
0eb4d598e24b8a913717673c283cbf1f
  $s$fBufferFormatNormalized_$s$fBufferFormatNormalized_$cgetGlType ::
    Graphics.GPipe.Internal.Buffer.Normalized
      (Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8)
    -> Graphics.GL.Types.GLenum
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                Graphics.GPipe.Internal.Buffer.$fBufferFormatB30_$cgetGlType
                  `cast`
                (Sym (Graphics.GPipe.Internal.Buffer.N:Normalized[0]
                          <Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8>_R)
                 ->_R <Graphics.GL.Types.GLenum>_R) -}
0266eca5854cf185876ff7b520caeba2
  $s$fBufferFormatNormalized_$s$fBufferFormatNormalized_$cpeekPixel ::
    Graphics.GPipe.Internal.Buffer.Normalized
      (Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8)
    -> GHC.Ptr.Ptr ()
    -> GHC.Types.IO
         (Graphics.GPipe.Internal.Buffer.HostFormat
            (Graphics.GPipe.Internal.Buffer.Normalized
               (Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8)))
  {- Strictness: x,
     Unfolding: InlineRule (0, True, True)
                (Graphics.GPipe.Internal.Buffer.$fBufferFormatNormalized1
                   @ (Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8)) -}
b718dfa54cad4c0078d355a8790ab54e
  $s$fBufferFormatUniform ::
    Graphics.GPipe.Internal.Buffer.BufferFormat
      (Graphics.GPipe.Internal.Buffer.Uniform
         (Linear.V4.V4
            (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Graphics.GPipe.Internal.Buffer.Uniform
                       (Linear.V4.V4
                          (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))))
                  (Graphics.GPipe.Internal.Buffer.$fBufferFormatUniform_$ctoBuffer
                     @ (Linear.V4.V4
                          (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
                     Main.$s$fBufferFormatUniform1)
                  (Graphics.GPipe.Internal.Buffer.$fBufferFormatUniform_$cgetGlType
                     @ (Linear.V4.V4
                          (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
                     Main.$s$fBufferFormatUniform1)
                  (Graphics.GPipe.Internal.Buffer.$fBufferFormatUniform_$cpeekPixel
                     @ (Linear.V4.V4
                          (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
                     Main.$s$fBufferFormatUniform1)
                  (Graphics.GPipe.Internal.Buffer.$fBufferFormatUniform_$cgetGlPaddedFormat
                     @ (Linear.V4.V4
                          (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
                     Main.$s$fBufferFormatUniform1) -}
3b79ffa5abf7fa970e576bdf6258d9d2
  $s$fBufferFormatUniform1 ::
    Graphics.GPipe.Internal.Buffer.BufferFormat
      (Linear.V4.V4
         (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fBufferFormatUniform_$s$fBufferFormatV4 -}
8ed2765962dc621d2c6a60e36973c880
  $s$fBufferFormatUniform2 ::
    Graphics.GPipe.Internal.Buffer.BufferFormat
      (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fBufferFormatUniform_$s$fBufferFormatV1 -}
ee743211be3702a149692535be4ff86f
  $s$fBufferFormatUniform3 ::
    Graphics.GPipe.Internal.Buffer.BufferFormat
      (Graphics.GPipe.Internal.Buffer.Uniform
         (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Graphics.GPipe.Internal.Buffer.Uniform
                       (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
                  (Graphics.GPipe.Internal.Buffer.$fBufferFormatUniform_$ctoBuffer
                     @ (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)
                     Graphics.GPipe.Internal.Buffer.$fBufferFormatB)
                  Main.$s$fBufferFormatUniform_$s$fBufferFormatUniform_$cgetGlType
                  Main.$s$fBufferFormatUniform_$s$fBufferFormatUniform_$cpeekPixel
                  Main.$s$fBufferFormatUniform_$s$fBufferFormatUniform_$cgetGlPaddedFormat -}
291acd5061c9e2c4a7ff37be98aa7752
  $s$fBufferFormatUniform_$dBufferFormat ::
    Graphics.GPipe.Internal.Buffer.BufferFormat
      (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Graphics.GPipe.Internal.Buffer.$fBufferFormatB -}
683e187e292b351461300072d3ad50c1
  $s$fBufferFormatUniform_$s$fBufferFormatUniform_$cgetGlPaddedFormat ::
    Graphics.GPipe.Internal.Buffer.Uniform
      (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)
    -> Graphics.GL.Types.GLenum
  {- Strictness: x,
     Unfolding: InlineRule (0, True, True)
                (Graphics.GPipe.Internal.Buffer.$fBufferFormatUniform1
                   @ (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)) -}
fca01748d443deaf064149669b65c1d2
  $s$fBufferFormatUniform_$s$fBufferFormatUniform_$cgetGlType ::
    Graphics.GPipe.Internal.Buffer.Uniform
      (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)
    -> Graphics.GL.Types.GLenum
  {- Strictness: x,
     Unfolding: InlineRule (0, True, True)
                (Graphics.GPipe.Internal.Buffer.$fBufferFormatUniform3
                   @ (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)) -}
70606a1de99dd899facfb8aa6ec63ae6
  $s$fBufferFormatUniform_$s$fBufferFormatUniform_$cpeekPixel ::
    Graphics.GPipe.Internal.Buffer.Uniform
      (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)
    -> GHC.Ptr.Ptr ()
    -> GHC.Types.IO
         (Graphics.GPipe.Internal.Buffer.HostFormat
            (Graphics.GPipe.Internal.Buffer.Uniform
               (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
  {- Strictness: x,
     Unfolding: InlineRule (0, True, True)
                (Graphics.GPipe.Internal.Buffer.$fBufferFormatUniform2
                   @ (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)) -}
5dbf525f9e135600365b878a4ec939db
  $s$fBufferFormatUniform_$s$fBufferFormatV1 ::
    Graphics.GPipe.Internal.Buffer.BufferFormat
      (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
                  (Graphics.GPipe.Internal.Buffer.$fBufferFormatV4_$ctoBuffer
                     @ (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)
                     Main.$s$fBufferFormatUniform_$dBufferFormat)
                  Main.$s$fBufferFormatUniform_$s$fBufferFormatV4_$cgetGlType
                  Main.$s$fBufferFormatUniform_$s$fBufferFormatV4_$cpeekPixel
                  Main.$s$fBufferFormatUniform_$s$fBufferFormatV4_$cgetGlPaddedFormat -}
5f48a689bb7935235bcf4fad067beed4
  $s$fBufferFormatUniform_$s$fBufferFormatV4 ::
    Graphics.GPipe.Internal.Buffer.BufferFormat
      (Linear.V4.V4
         (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V4.V4
                       (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
                  (Graphics.GPipe.Internal.Buffer.$fBufferFormatV4_$ctoBuffer
                     @ (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
                     Main.$s$fBufferFormatUniform2)
                  (Graphics.GPipe.Internal.Buffer.$fBufferFormatV4_$cgetGlType
                     @ (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
                     Main.$s$fBufferFormatUniform2)
                  (Graphics.GPipe.Internal.Buffer.$fBufferFormatV4_$cpeekPixel
                     @ (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
                     Main.$s$fBufferFormatUniform2)
                  (Graphics.GPipe.Internal.Buffer.$fBufferFormatV4_$cgetGlPaddedFormat
                     @ (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
                     Main.$s$fBufferFormatUniform2) -}
e2de3ff1f52bc45488545e4ee7296ffc
  $s$fBufferFormatUniform_$s$fBufferFormatV4_$cgetGlPaddedFormat ::
    Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)
    -> Graphics.GL.Types.GLenum
  {- Strictness: x,
     Unfolding: InlineRule (0, True, True)
                (Graphics.GPipe.Internal.Buffer.$fBufferFormatV24
                   @ (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)) -}
21290eec04311b0a63d4b8a08f107880
  $s$fBufferFormatUniform_$s$fBufferFormatV4_$cgetGlType ::
    Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)
    -> Graphics.GL.Types.GLenum
  {- Strictness: x,
     Unfolding: InlineRule (0, True, True)
                (Graphics.GPipe.Internal.Buffer.$fBufferFormatV26
                   @ (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)) -}
6b815625dfb0335a127a58da04a16e46
  $s$fBufferFormatUniform_$s$fBufferFormatV4_$cpeekPixel ::
    Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)
    -> GHC.Ptr.Ptr ()
    -> GHC.Types.IO
         (Graphics.GPipe.Internal.Buffer.HostFormat
            (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
  {- Strictness: x,
     Unfolding: InlineRule (0, True, True)
                (Graphics.GPipe.Internal.Buffer.$fBufferFormatV25
                   @ (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)) -}
b58c4a3ee7856dae2649adb75e2d6a6f
  $s$fShowBoundingBox_$s$fShowV3 ::
    GHC.Show.Show (Linear.V3.V3 GHC.Types.Float)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V3.V3 GHC.Types.Float)
                  (Linear.V3.$fShowV3_$cshowsPrec
                     @ GHC.Types.Float
                     GHC.Float.$fShowFloat)
                  Main.$s$fShowBoundingBox_$s$fShowV3_$cshow
                  Main.$s$fShowBoundingBox_$s$fShowV3_$cshowList -}
9fef2b69a1af97891da12c9a265d4807
  $s$fShowBoundingBox_$s$fShowV3_$cshow ::
    Linear.V3.V3 GHC.Types.Float -> GHC.Base.String
  {- Arity: 1, Strictness: <S(SSS),1*U(U(U),U(U),U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Linear.V3.V3 GHC.Types.Float) ->
                 Linear.V3.$fShowV3_$cshowsPrec
                   @ GHC.Types.Float
                   GHC.Float.$fShowFloat
                   GHC.Show.shows22
                   eta
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ad2a1fe85e99b60a9b9886a1d28c82a0
  $s$fShowBoundingBox_$s$fShowV3_$cshowList ::
    [Linear.V3.V3 GHC.Types.Float] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [Linear.V3.V3 GHC.Types.Float])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Linear.V3.V3 GHC.Types.Float)
                   (Linear.V3.$fShowV3_$cshowsPrec
                      @ GHC.Types.Float
                      GHC.Float.$fShowFloat
                      Linear.V3.$fShowV1)
                   eta
                   eta1) -}
4f9154f0616e937adda09bf6415938fa
  $s$fUniformInputV1 ::
    Graphics.GPipe.Internal.Uniform.UniformInput
      (Linear.V4.V4
         (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V4.V4
                       (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
                  (Graphics.GPipe.Internal.Uniform.$fUniformInputV4_$cp1UniformInput
                     @ (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
                     Main.$s$fUniformInputV2)
                  (Graphics.GPipe.Internal.Uniform.$fUniformInputV4_$ctoUniform
                     @ (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
                     Main.$s$fUniformInputV2) -}
a79ad1280bb28032e1f8b650c37aafab
  $s$fUniformInputV2 ::
    Graphics.GPipe.Internal.Uniform.UniformInput
      (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fUniformInputV4 -}
201239b296ad38f4310733221610a9af
  $s$fUniformInputV4 ::
    Graphics.GPipe.Internal.Uniform.UniformInput
      (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V4.V4 (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
                  Main.$s$fBufferFormatUniform2
                  (Graphics.GPipe.Internal.Uniform.$fUniformInputV4_$ctoUniform
                     @ (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)
                     Graphics.GPipe.Internal.Uniform.$fUniformInputB1) -}
f4151c19750264e13b5fcca577ca9319
  $sel:fMatrixUniforms:App ::
    Main.App os f
    -> Graphics.GPipe.Internal.Buffer.Buffer
         os
         (Graphics.GPipe.Internal.Buffer.Uniform
            (Linear.Matrix.M44
               (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)))
  RecSel Left Main.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U(U,U,U,U,U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ os @ f (ds :: Main.App os f) ->
                 case ds of wild { Main.App ds1 ds2 ds3 ds4 ds5 ds6 -> ds2 }) -}
be56540db19a15d027434ec8b01ea95a
  $sel:fMatrixValues:App ::
    Main.App os f -> [Linear.Matrix.M44 GHC.Types.Float]
  RecSel Left Main.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ os @ f (ds :: Main.App os f) ->
                 case ds of wild { Main.App ds1 ds2 ds3 ds4 ds5 ds6 -> ds5 }) -}
f0536b997b004ff1c41cc68013eb43d0
  $sel:fPrimitiveArray:ShaderData ::
    Main.ShaderData
    -> Graphics.GPipe.Internal.PrimitiveArray.PrimitiveArray
         Graphics.GPipe.Internal.PrimitiveArray.Triangles
         (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
          Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)
  RecSel Left Main.ShaderData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.ShaderData) ->
                 case ds of wild { Main.ShaderData ds1 ds2 -> ds1 }) -}
48b201264fca1e56c5b5f2156374a636
  $sel:fRasterOptions:App ::
    Main.App os f
    -> (Graphics.GPipe.Internal.FragmentStream.Side,
        Graphics.GPipe.Internal.FragmentStream.ViewPort,
        Graphics.GPipe.Internal.FragmentStream.DepthRange)
  RecSel Left Main.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ os @ f (ds :: Main.App os f) ->
                 case ds of wild { Main.App ds1 ds2 ds3 ds4 ds5 ds6 -> ds4 }) -}
18b89a7b7bf7ec70bc965b96a9b81e3b
  $sel:fRasterOptions:ShaderData ::
    Main.ShaderData
    -> (Graphics.GPipe.Internal.FragmentStream.Side,
        Graphics.GPipe.Internal.FragmentStream.ViewPort,
        Graphics.GPipe.Internal.FragmentStream.DepthRange)
  RecSel Left Main.ShaderData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.ShaderData) ->
                 case ds of wild { Main.ShaderData ds1 ds2 -> ds2 }) -}
073e17343d23fd854997b817ce92fba2
  $sel:fScalarUniforms:App ::
    Main.App os f
    -> Graphics.GPipe.Internal.Buffer.Buffer
         os
         (Graphics.GPipe.Internal.Buffer.Uniform
            (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))
  RecSel Left Main.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U(U,U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ os @ f (ds :: Main.App os f) ->
                 case ds of wild { Main.App ds1 ds2 ds3 ds4 ds5 ds6 -> ds3 }) -}
7107f50949b164a8cac2ef18225cec05
  $sel:fScalarValues:App :: Main.App os f -> [GHC.Types.Float]
  RecSel Left Main.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ os @ f (ds :: Main.App os f) ->
                 case ds of wild { Main.App ds1 ds2 ds3 ds4 ds5 ds6 -> ds6 }) -}
cee8fc7747fd3ff8f7f242cf72db4973
  $sel:fVertices:App ::
    Main.App os f
    -> Graphics.GPipe.Internal.Buffer.Buffer
         os
         (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
          Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)
  RecSel Left Main.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U(U,U,U,U,U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ os @ f (ds :: Main.App os f) ->
                 case ds of wild { Main.App ds1 ds2 ds3 ds4 ds5 ds6 -> ds1 }) -}
aea265554746daa245f2b55e29c3dfab
  $sfromList ::
    [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [Data.Text.Internal.Text]) ->
                 case ds of wild {
                   [] -> Data.Set.Base.Tip @ Data.Text.Internal.Text
                   : x ds1
                   -> case ds1 of wild1 {
                        []
                        -> case x of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                           Data.Set.Base.Bin
                             @ Data.Text.Internal.Text
                             1#
                             dt
                             (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                             (Data.Set.Base.Tip @ Data.Text.Internal.Text) }
                        : ipv ipv1
                        -> case x of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case ipv of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                             DEFAULT
                             -> Main.$sfromList_go5
                                  (Data.Set.Base.Bin
                                     @ Data.Text.Internal.Text
                                     1#
                                     ww
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text))
                                  wild1
                             GHC.Types.LT
                             -> Main.$wgo5
                                  1#
                                  (Data.Set.Base.Bin
                                     @ Data.Text.Internal.Text
                                     1#
                                     ww
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text))
                                  wild1 } } } } }) -}
45124310380d0276b5451453e2c5a8e2
  $sfromList_go5 ::
    Data.Set.Base.Set Data.Text.Internal.Text
    -> [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
c4753614eb4bb6049a700384e568c5c0
  $sprintf3 :: () GHC.Types.~~ ()
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq# @ * @ * @ () @ () @~ <()>_N) -}
d37897fc755f88d25f330f5ab9ddba4d
  $tc'App :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7051572146787704749##
                   5871644046012494277##
                   Main.$trModule
                   Main.$tc'App1) -}
3e5138cdbdb99070f2c9ac6cd4264c08
  $tc'App1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'App"#) -}
dd47ee236cc2d4c5d3de4839ee449770
  $tc'C:HasMatrixUniforms :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   484160894431599746##
                   2522094292961762116##
                   Main.$trModule
                   Main.$tc'C:HasMatrixUniforms1) -}
d574c7cda57664d1e54e52acb239f7f7
  $tc'C:HasMatrixUniforms1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:HasMatrixUniforms"#) -}
223f05f94ca37a7129a344675d25f49b
  $tc'C:HasMatrixValues :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14281643006479235778##
                   13216935853194771277##
                   Main.$trModule
                   Main.$tc'C:HasMatrixValues1) -}
002cb2c0bc380f422fce7d64a4425d9f
  $tc'C:HasMatrixValues1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:HasMatrixValues"#) -}
e87d5bdbd9d0c77d07316746bb1a14d5
  $tc'C:HasPrimitiveArray :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15727729165336662461##
                   12095380187308779051##
                   Main.$trModule
                   Main.$tc'C:HasPrimitiveArray1) -}
ae5c92844b97e02f3f5a20aab9481986
  $tc'C:HasPrimitiveArray1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:HasPrimitiveArray"#) -}
09c45ff68f2602b4e99e04f9d21366a2
  $tc'C:HasRasterOptions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7967488421856885760##
                   2474556554688285611##
                   Main.$trModule
                   Main.$tc'C:HasRasterOptions1) -}
6f4a06d166fa3d5a94ef0192d1aada73
  $tc'C:HasRasterOptions1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:HasRasterOptions"#) -}
191e80095f6975ac075cee28bd7573f1
  $tc'C:HasScalarUniforms :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   977353854945494989##
                   14077632734000450666##
                   Main.$trModule
                   Main.$tc'C:HasScalarUniforms1) -}
535eeb3318ba057ce94e6f168775beb5
  $tc'C:HasScalarUniforms1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:HasScalarUniforms"#) -}
c807f4bb7e0a66b6986e731c57ffcb9a
  $tc'C:HasScalarValues :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17210113704383246537##
                   208961845789035866##
                   Main.$trModule
                   Main.$tc'C:HasScalarValues1) -}
f608c13ca4dd97ab0463711c583452a8
  $tc'C:HasScalarValues1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:HasScalarValues"#) -}
9e14d4778f57db69c346519001fa4f66
  $tc'ShaderData :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13180807198756300081##
                   10377435780296928719##
                   Main.$trModule
                   Main.$tc'ShaderData1) -}
949a862925fd91d4be635b0142d39460
  $tc'ShaderData1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ShaderData"#) -}
edc549220978c2ad9ab2d2764962e02d
  $tcApp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14970973039056183339##
                   3406116951977320360##
                   Main.$trModule
                   Main.$tcApp1) -}
9ac977a6d6449deed74480371ebd14d8
  $tcApp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "App"#) -}
efd29492ef9572b7c4f0b28554a980b0
  $tcHasMatrixUniforms :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6999875891698993927##
                   7366501785268455761##
                   Main.$trModule
                   Main.$tcHasMatrixUniforms1) -}
a52e07e33b3f4b27b0e6e2166d74c5ab
  $tcHasMatrixUniforms1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HasMatrixUniforms"#) -}
82b060e22ab26397003324921b1efc6e
  $tcHasMatrixValues :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14450570823572444973##
                   8354470941433288610##
                   Main.$trModule
                   Main.$tcHasMatrixValues1) -}
d4fd73240711ff7a316c80aeabdaf693
  $tcHasMatrixValues1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HasMatrixValues"#) -}
05190668d210804bc1527b173878d066
  $tcHasPrimitiveArray :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8959759452597667543##
                   7505825894501770779##
                   Main.$trModule
                   Main.$tcHasPrimitiveArray1) -}
ff52db499b41bd92de202b255a262478
  $tcHasPrimitiveArray1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HasPrimitiveArray"#) -}
e7c079880e68868a580f0fb1c02b334a
  $tcHasRasterOptions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4815595816815886463##
                   15908090532518482714##
                   Main.$trModule
                   Main.$tcHasRasterOptions1) -}
00f0f085f3da7556e01731a6194b21b3
  $tcHasRasterOptions1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HasRasterOptions"#) -}
e1d30d4f68033932f6b5bc42bb2642c4
  $tcHasScalarUniforms :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1258554136367611968##
                   4965120454239524027##
                   Main.$trModule
                   Main.$tcHasScalarUniforms1) -}
afc8966a3c3686044291fa67c12747ee
  $tcHasScalarUniforms1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HasScalarUniforms"#) -}
822a8618570760c91edfb25352d88654
  $tcHasScalarValues :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8075312523145649524##
                   14706111517016404859##
                   Main.$trModule
                   Main.$tcHasScalarValues1) -}
8fb15b522ae8d4e5f3bcf00ac8a85f58
  $tcHasScalarValues1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HasScalarValues"#) -}
d86963b032556c93e54ed758f1a60ba7
  $tcShaderData :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1312681661922040268##
                   4481692867457170669##
                   Main.$trModule
                   Main.$tcShaderData1) -}
487c142eac9bfa36b7f1f4f275035ee6
  $tcShaderData1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ShaderData"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
55328790099d2f0125ad91a752e5cf55
  $w$sgo5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Set.Base.Set Data.Text.Internal.Text
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,1*U>, Inline: [0] -}
59fb1a2f2f4ee23b888f57dfc6c9a409
  $wgo5 ::
    GHC.Prim.Int#
    -> Data.Set.Base.Set Data.Text.Internal.Text
    -> [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
73d8ab17f669c585035c7f7e696839df
  $wloop ::
    (Graphics.GPipe.Internal.Buffer.HostFormat b
     GHC.Prim.~# Linear.V4.V4 (Linear.V4.V4 a),
     Graphics.GPipe.Internal.Format.Color c GHC.Types.Float
     GHC.Prim.~# Linear.V3.V3 a1,
     Main.HasMatrixUniforms
       t (Graphics.GPipe.Internal.Buffer.Buffer os b),
     Main.HasMatrixValues t [Linear.Matrix.M44 a],
     Main.HasRasterOptions
       t
       (Graphics.GPipe.Internal.FragmentStream.Side,
        Graphics.GPipe.Internal.FragmentStream.ViewPort,
        Graphics.GPipe.Internal.FragmentStream.DepthRange),
     Main.HasScalarUniforms
       t (Graphics.GPipe.Internal.Buffer.Buffer os b1),
     Main.HasScalarValues
       t [Graphics.GPipe.Internal.Buffer.HostFormat b1],
     Graphics.WaveFront.Lenses.HasVertices
       t
       (Graphics.GPipe.Internal.Buffer.Buffer
          os
          (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
           Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)),
     Linear.Epsilon.Epsilon a, Control.Monad.IO.Class.MonadIO m,
     Graphics.GPipe.Internal.Format.ContextColorFormat c,
     GHC.Real.Fractional (Graphics.GPipe.Internal.Buffer.HostFormat b1),
     GHC.Real.Fractional a1, GHC.Float.Floating a) =>
    (Main.ShaderData
     -> Graphics.GPipe.Internal.Context.Render
          os (Graphics.GPipe.Internal.Format.ContextFormat c ds) ())
    -> t
    -> Graphics.GPipe.Internal.Context.ContextT
         Graphics.GPipe.Context.GLFW.Resource.GLFWWindow
         os
         (Graphics.GPipe.Internal.Format.ContextFormat c ds)
         m
         ()
  {- Arity: 14,
     Strictness: <L,U><L,U><L,C(U)><L,C(U)><L,C(U)><L,C(U)><L,C(U)><L,1*C1(U)><L,U(U,C(U))><L,U(U,C(U))><L,U(U(U(A,A,A,A,C(C1(U)),A,A),A,A),A,A,A,A)><L,U(U,C(C1(U)),A,C(U))><L,U(A,A,A,C(U))><L,U(U(U,U,U,U),U,A,A,C(U),A,A,C(U),C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [0] -}
641bef3e548ebeb4fbdca753dce13122
  $wplane ::
    GHC.Real.Fractional f => (f -> f -> a) -> f -> f -> (# a, [a] #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(1*U,C(C1(U)),A,A)><L,C(C1(U))><L,U><L,U>,
     Inline: [0] -}
0ce0ee50cbe1ddb6f9217c2cf096aa8d
  $wpoly_fail ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            a
            (Linear.V2.V2 GHC.Types.Int,
             Graphics.GPipe.Internal.Texture.Texture2D
               os
               (Graphics.GPipe.Internal.Format.Format
                  Graphics.GPipe.Internal.Format.RGBFloat)) #)
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
7b9c396497f11f36caccdf4b9ff8111d
  $wrotation ::
    Graphics.GPipe.Internal.Expr.S
      Graphics.GPipe.Internal.Expr.V GHC.Types.Float
    -> (# Linear.V4.V4
            (Graphics.GPipe.Internal.Expr.S
               Graphics.GPipe.Internal.Expr.V GHC.Types.Float),
          Linear.V4.V4
            (Graphics.GPipe.Internal.Expr.S
               Graphics.GPipe.Internal.Expr.V GHC.Types.Float),
          Linear.V4.V4
            (Graphics.GPipe.Internal.Expr.S
               Graphics.GPipe.Internal.Expr.V GHC.Types.Float),
          Linear.V4.V4
            (Graphics.GPipe.Internal.Expr.S
               Graphics.GPipe.Internal.Expr.V GHC.Types.Float) #)
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (w :: Graphics.GPipe.Internal.Expr.S
                           Graphics.GPipe.Internal.Expr.V GHC.Types.Float) ->
                 case (Graphics.GPipe.Internal.Expr.$fNumS6
                         @ Graphics.GPipe.Internal.Expr.V
                         @ GHC.Types.Float
                         @ GHC.Types.Float
                         Graphics.GPipe.Internal.Expr.STypeFloat
                         Graphics.GPipe.Internal.Expr.$fFloatingS26
                         w)
                        `cast`
                      (Trans
                           (Data.SNMap.N:SNMapReaderT[0]
                                <[GHC.Base.String]>_N
                                <Control.Monad.Trans.State.Lazy.StateT
                                   Graphics.GPipe.Internal.Expr.ExprState
                                   (Control.Monad.Trans.Writer.Lazy.WriterT
                                      GHC.Base.String
                                      (Control.Monad.Trans.State.Lazy.StateT
                                         Graphics.GPipe.Internal.Expr.NextTempVar
                                         GHC.Types.IO))>_N <GHC.Base.String>_N)
                           (Control.Monad.Trans.State.Strict.N:StateT[0]
                                <Data.SNMap.SNMap
                                   (Data.SNMap.SNMapReaderT
                                      [GHC.Base.String]
                                      (Control.Monad.Trans.State.Lazy.StateT
                                         Graphics.GPipe.Internal.Expr.ExprState
                                         (Control.Monad.Trans.Writer.Lazy.WriterT
                                            GHC.Base.String
                                            (Control.Monad.Trans.State.Lazy.StateT
                                               Graphics.GPipe.Internal.Expr.NextTempVar
                                               GHC.Types.IO))))
                                   [GHC.Base.String]>_N
                                <Control.Monad.Trans.State.Lazy.StateT
                                   Graphics.GPipe.Internal.Expr.ExprState
                                   (Control.Monad.Trans.Writer.Lazy.WriterT
                                      GHC.Base.String
                                      (Control.Monad.Trans.State.Lazy.StateT
                                         Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))>_R
                                <GHC.Base.String>_N)) of nt { DEFAULT ->
                 case (Graphics.GPipe.Internal.Expr.$fBooleanS10
                         @ Graphics.GPipe.Internal.Expr.V
                         @ GHC.Types.Float
                         @ GHC.Types.Float
                         Graphics.GPipe.Internal.Expr.STypeFloat
                         Graphics.GPipe.Internal.Expr.$fNumS10
                         (Graphics.GPipe.Internal.Expr.$fNumS6
                            @ Graphics.GPipe.Internal.Expr.V
                            @ GHC.Types.Float
                            @ GHC.Types.Float
                            Graphics.GPipe.Internal.Expr.STypeFloat
                            Graphics.GPipe.Internal.Expr.$fFloatingS28
                            w)
                           `cast`
                         (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                   <Graphics.GPipe.Internal.Expr.V>_P <GHC.Types.Float>_P)))
                        `cast`
                      (Trans
                           (Data.SNMap.N:SNMapReaderT[0]
                                <[GHC.Base.String]>_N
                                <Control.Monad.Trans.State.Lazy.StateT
                                   Graphics.GPipe.Internal.Expr.ExprState
                                   (Control.Monad.Trans.Writer.Lazy.WriterT
                                      GHC.Base.String
                                      (Control.Monad.Trans.State.Lazy.StateT
                                         Graphics.GPipe.Internal.Expr.NextTempVar
                                         GHC.Types.IO))>_N <GHC.Base.String>_N)
                           (Control.Monad.Trans.State.Strict.N:StateT[0]
                                <Data.SNMap.SNMap
                                   (Data.SNMap.SNMapReaderT
                                      [GHC.Base.String]
                                      (Control.Monad.Trans.State.Lazy.StateT
                                         Graphics.GPipe.Internal.Expr.ExprState
                                         (Control.Monad.Trans.Writer.Lazy.WriterT
                                            GHC.Base.String
                                            (Control.Monad.Trans.State.Lazy.StateT
                                               Graphics.GPipe.Internal.Expr.NextTempVar
                                               GHC.Types.IO))))
                                   [GHC.Base.String]>_N
                                <Control.Monad.Trans.State.Lazy.StateT
                                   Graphics.GPipe.Internal.Expr.ExprState
                                   (Control.Monad.Trans.Writer.Lazy.WriterT
                                      GHC.Base.String
                                      (Control.Monad.Trans.State.Lazy.StateT
                                         Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))>_R
                                <GHC.Base.String>_N)) of nt1 { DEFAULT ->
                 case (Graphics.GPipe.Internal.Expr.$fNumS6
                         @ Graphics.GPipe.Internal.Expr.V
                         @ GHC.Types.Float
                         @ GHC.Types.Float
                         Graphics.GPipe.Internal.Expr.STypeFloat
                         Graphics.GPipe.Internal.Expr.$fFloatingS28
                         w)
                        `cast`
                      (Trans
                           (Data.SNMap.N:SNMapReaderT[0]
                                <[GHC.Base.String]>_N
                                <Control.Monad.Trans.State.Lazy.StateT
                                   Graphics.GPipe.Internal.Expr.ExprState
                                   (Control.Monad.Trans.Writer.Lazy.WriterT
                                      GHC.Base.String
                                      (Control.Monad.Trans.State.Lazy.StateT
                                         Graphics.GPipe.Internal.Expr.NextTempVar
                                         GHC.Types.IO))>_N <GHC.Base.String>_N)
                           (Control.Monad.Trans.State.Strict.N:StateT[0]
                                <Data.SNMap.SNMap
                                   (Data.SNMap.SNMapReaderT
                                      [GHC.Base.String]
                                      (Control.Monad.Trans.State.Lazy.StateT
                                         Graphics.GPipe.Internal.Expr.ExprState
                                         (Control.Monad.Trans.Writer.Lazy.WriterT
                                            GHC.Base.String
                                            (Control.Monad.Trans.State.Lazy.StateT
                                               Graphics.GPipe.Internal.Expr.NextTempVar
                                               GHC.Types.IO))))
                                   [GHC.Base.String]>_N
                                <Control.Monad.Trans.State.Lazy.StateT
                                   Graphics.GPipe.Internal.Expr.ExprState
                                   (Control.Monad.Trans.Writer.Lazy.WriterT
                                      GHC.Base.String
                                      (Control.Monad.Trans.State.Lazy.StateT
                                         Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))>_R
                                <GHC.Base.String>_N)) of nt2 { DEFAULT ->
                 (# Linear.V4.V4
                      @ (Graphics.GPipe.Internal.Expr.S
                           Graphics.GPipe.Internal.Expr.V GHC.Types.Float)
                      nt
                        `cast`
                      (Trans
                           (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                     <Data.SNMap.SNMap
                                        (Data.SNMap.SNMapReaderT
                                           [GHC.Base.String]
                                           (Control.Monad.Trans.State.Lazy.StateT
                                              Graphics.GPipe.Internal.Expr.ExprState
                                              (Control.Monad.Trans.Writer.Lazy.WriterT
                                                 GHC.Base.String
                                                 (Control.Monad.Trans.State.Lazy.StateT
                                                    Graphics.GPipe.Internal.Expr.NextTempVar
                                                    GHC.Types.IO))))
                                        [GHC.Base.String]>_N
                                     <Control.Monad.Trans.State.Lazy.StateT
                                        Graphics.GPipe.Internal.Expr.ExprState
                                        (Control.Monad.Trans.Writer.Lazy.WriterT
                                           GHC.Base.String
                                           (Control.Monad.Trans.State.Lazy.StateT
                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                              GHC.Types.IO))>_R
                                     <GHC.Base.String>_N))
                           (Trans
                                (Sym (Data.SNMap.N:SNMapReaderT[0]
                                          <[GHC.Base.String]>_N
                                          <Control.Monad.Trans.State.Lazy.StateT
                                             Graphics.GPipe.Internal.Expr.ExprState
                                             (Control.Monad.Trans.Writer.Lazy.WriterT
                                                GHC.Base.String
                                                (Control.Monad.Trans.State.Lazy.StateT
                                                   Graphics.GPipe.Internal.Expr.NextTempVar
                                                   GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                          <Graphics.GPipe.Internal.Expr.V>_P <GHC.Types.Float>_P))))
                      nt1
                        `cast`
                      (Trans
                           (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                     <Data.SNMap.SNMap
                                        (Data.SNMap.SNMapReaderT
                                           [GHC.Base.String]
                                           (Control.Monad.Trans.State.Lazy.StateT
                                              Graphics.GPipe.Internal.Expr.ExprState
                                              (Control.Monad.Trans.Writer.Lazy.WriterT
                                                 GHC.Base.String
                                                 (Control.Monad.Trans.State.Lazy.StateT
                                                    Graphics.GPipe.Internal.Expr.NextTempVar
                                                    GHC.Types.IO))))
                                        [GHC.Base.String]>_N
                                     <Control.Monad.Trans.State.Lazy.StateT
                                        Graphics.GPipe.Internal.Expr.ExprState
                                        (Control.Monad.Trans.Writer.Lazy.WriterT
                                           GHC.Base.String
                                           (Control.Monad.Trans.State.Lazy.StateT
                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                              GHC.Types.IO))>_R
                                     <GHC.Base.String>_N))
                           (Trans
                                (Sym (Data.SNMap.N:SNMapReaderT[0]
                                          <[GHC.Base.String]>_N
                                          <Control.Monad.Trans.State.Lazy.StateT
                                             Graphics.GPipe.Internal.Expr.ExprState
                                             (Control.Monad.Trans.Writer.Lazy.WriterT
                                                GHC.Base.String
                                                (Control.Monad.Trans.State.Lazy.StateT
                                                   Graphics.GPipe.Internal.Expr.NextTempVar
                                                   GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                          <Graphics.GPipe.Internal.Expr.V>_P <GHC.Types.Float>_P))))
                      Main.rotation4
                        `cast`
                      (Trans
                           (<Data.SNMap.SNMap
                               (Data.SNMap.SNMapReaderT
                                  [GHC.Base.String]
                                  (Control.Monad.Trans.State.Lazy.StateT
                                     Graphics.GPipe.Internal.Expr.ExprState
                                     (Control.Monad.Trans.Writer.Lazy.WriterT
                                        GHC.Base.String
                                        (Control.Monad.Trans.State.Lazy.StateT
                                           Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                               [GHC.Base.String]>_R
                            ->_R Trans
                                     (<Graphics.GPipe.Internal.Expr.ExprState>_R
                                      ->_R Trans
                                               (<Graphics.GPipe.Internal.Expr.NextTempVar>_R
                                                ->_R Sym (GHC.Types.N:IO[0]
                                                              <((((GHC.Base.String,
                                                                   Data.SNMap.SNMap
                                                                     (Data.SNMap.SNMapReaderT
                                                                        [GHC.Base.String]
                                                                        (Control.Monad.Trans.State.Lazy.StateT
                                                                           Graphics.GPipe.Internal.Expr.ExprState
                                                                           (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                              GHC.Base.String
                                                                              (Control.Monad.Trans.State.Lazy.StateT
                                                                                 Graphics.GPipe.Internal.Expr.NextTempVar
                                                                                 GHC.Types.IO))))
                                                                     [GHC.Base.String]),
                                                                  Graphics.GPipe.Internal.Expr.ExprState),
                                                                 GHC.Base.String),
                                                                Graphics.GPipe.Internal.Expr.NextTempVar)>_R))
                                               (Trans
                                                    (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                              <Graphics.GPipe.Internal.Expr.NextTempVar>_N
                                                              <GHC.Types.IO>_R
                                                              <(((GHC.Base.String,
                                                                  Data.SNMap.SNMap
                                                                    (Data.SNMap.SNMapReaderT
                                                                       [GHC.Base.String]
                                                                       (Control.Monad.Trans.State.Lazy.StateT
                                                                          Graphics.GPipe.Internal.Expr.ExprState
                                                                          (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                             GHC.Base.String
                                                                             (Control.Monad.Trans.State.Lazy.StateT
                                                                                Graphics.GPipe.Internal.Expr.NextTempVar
                                                                                GHC.Types.IO))))
                                                                    [GHC.Base.String]),
                                                                 Graphics.GPipe.Internal.Expr.ExprState),
                                                                GHC.Base.String)>_N))
                                                    (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                              <GHC.Base.String>_N
                                                              <Control.Monad.Trans.State.Lazy.StateT
                                                                 Graphics.GPipe.Internal.Expr.NextTempVar
                                                                 GHC.Types.IO>_R
                                                              <((GHC.Base.String,
                                                                 Data.SNMap.SNMap
                                                                   (Data.SNMap.SNMapReaderT
                                                                      [GHC.Base.String]
                                                                      (Control.Monad.Trans.State.Lazy.StateT
                                                                         Graphics.GPipe.Internal.Expr.ExprState
                                                                         (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                            GHC.Base.String
                                                                            (Control.Monad.Trans.State.Lazy.StateT
                                                                               Graphics.GPipe.Internal.Expr.NextTempVar
                                                                               GHC.Types.IO))))
                                                                   [GHC.Base.String]),
                                                                Graphics.GPipe.Internal.Expr.ExprState)>_N))))
                                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                               <Graphics.GPipe.Internal.Expr.ExprState>_N
                                               <Control.Monad.Trans.Writer.Lazy.WriterT
                                                  GHC.Base.String
                                                  (Control.Monad.Trans.State.Lazy.StateT
                                                     Graphics.GPipe.Internal.Expr.NextTempVar
                                                     GHC.Types.IO)>_R
                                               <(GHC.Base.String,
                                                 Data.SNMap.SNMap
                                                   (Data.SNMap.SNMapReaderT
                                                      [GHC.Base.String]
                                                      (Control.Monad.Trans.State.Lazy.StateT
                                                         Graphics.GPipe.Internal.Expr.ExprState
                                                         (Control.Monad.Trans.Writer.Lazy.WriterT
                                                            GHC.Base.String
                                                            (Control.Monad.Trans.State.Lazy.StateT
                                                               Graphics.GPipe.Internal.Expr.NextTempVar
                                                               GHC.Types.IO))))
                                                   [GHC.Base.String])>_N)))
                           (Trans
                                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                          <Data.SNMap.SNMap
                                             (Data.SNMap.SNMapReaderT
                                                [GHC.Base.String]
                                                (Control.Monad.Trans.State.Lazy.StateT
                                                   Graphics.GPipe.Internal.Expr.ExprState
                                                   (Control.Monad.Trans.Writer.Lazy.WriterT
                                                      GHC.Base.String
                                                      (Control.Monad.Trans.State.Lazy.StateT
                                                         Graphics.GPipe.Internal.Expr.NextTempVar
                                                         GHC.Types.IO))))
                                             [GHC.Base.String]>_N
                                          <Control.Monad.Trans.State.Lazy.StateT
                                             Graphics.GPipe.Internal.Expr.ExprState
                                             (Control.Monad.Trans.Writer.Lazy.WriterT
                                                GHC.Base.String
                                                (Control.Monad.Trans.State.Lazy.StateT
                                                   Graphics.GPipe.Internal.Expr.NextTempVar
                                                   GHC.Types.IO))>_R
                                          <GHC.Base.String>_N))
                                (Trans
                                     (Sym (Data.SNMap.N:SNMapReaderT[0]
                                               <[GHC.Base.String]>_N
                                               <Control.Monad.Trans.State.Lazy.StateT
                                                  Graphics.GPipe.Internal.Expr.ExprState
                                                  (Control.Monad.Trans.Writer.Lazy.WriterT
                                                     GHC.Base.String
                                                     (Control.Monad.Trans.State.Lazy.StateT
                                                        Graphics.GPipe.Internal.Expr.NextTempVar
                                                        GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                     (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                               <Graphics.GPipe.Internal.Expr.V>_P
                                               <GHC.Types.Float>_P)))))
                      Main.rotation4
                        `cast`
                      (Trans
                           (<Data.SNMap.SNMap
                               (Data.SNMap.SNMapReaderT
                                  [GHC.Base.String]
                                  (Control.Monad.Trans.State.Lazy.StateT
                                     Graphics.GPipe.Internal.Expr.ExprState
                                     (Control.Monad.Trans.Writer.Lazy.WriterT
                                        GHC.Base.String
                                        (Control.Monad.Trans.State.Lazy.StateT
                                           Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                               [GHC.Base.String]>_R
                            ->_R Trans
                                     (<Graphics.GPipe.Internal.Expr.ExprState>_R
                                      ->_R Trans
                                               (<Graphics.GPipe.Internal.Expr.NextTempVar>_R
                                                ->_R Sym (GHC.Types.N:IO[0]
                                                              <((((GHC.Base.String,
                                                                   Data.SNMap.SNMap
                                                                     (Data.SNMap.SNMapReaderT
                                                                        [GHC.Base.String]
                                                                        (Control.Monad.Trans.State.Lazy.StateT
                                                                           Graphics.GPipe.Internal.Expr.ExprState
                                                                           (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                              GHC.Base.String
                                                                              (Control.Monad.Trans.State.Lazy.StateT
                                                                                 Graphics.GPipe.Internal.Expr.NextTempVar
                                                                                 GHC.Types.IO))))
                                                                     [GHC.Base.String]),
                                                                  Graphics.GPipe.Internal.Expr.ExprState),
                                                                 GHC.Base.String),
                                                                Graphics.GPipe.Internal.Expr.NextTempVar)>_R))
                                               (Trans
                                                    (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                              <Graphics.GPipe.Internal.Expr.NextTempVar>_N
                                                              <GHC.Types.IO>_R
                                                              <(((GHC.Base.String,
                                                                  Data.SNMap.SNMap
                                                                    (Data.SNMap.SNMapReaderT
                                                                       [GHC.Base.String]
                                                                       (Control.Monad.Trans.State.Lazy.StateT
                                                                          Graphics.GPipe.Internal.Expr.ExprState
                                                                          (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                             GHC.Base.String
                                                                             (Control.Monad.Trans.State.Lazy.StateT
                                                                                Graphics.GPipe.Internal.Expr.NextTempVar
                                                                                GHC.Types.IO))))
                                                                    [GHC.Base.String]),
                                                                 Graphics.GPipe.Internal.Expr.ExprState),
                                                                GHC.Base.String)>_N))
                                                    (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                              <GHC.Base.String>_N
                                                              <Control.Monad.Trans.State.Lazy.StateT
                                                                 Graphics.GPipe.Internal.Expr.NextTempVar
                                                                 GHC.Types.IO>_R
                                                              <((GHC.Base.String,
                                                                 Data.SNMap.SNMap
                                                                   (Data.SNMap.SNMapReaderT
                                                                      [GHC.Base.String]
                                                                      (Control.Monad.Trans.State.Lazy.StateT
                                                                         Graphics.GPipe.Internal.Expr.ExprState
                                                                         (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                            GHC.Base.String
                                                                            (Control.Monad.Trans.State.Lazy.StateT
                                                                               Graphics.GPipe.Internal.Expr.NextTempVar
                                                                               GHC.Types.IO))))
                                                                   [GHC.Base.String]),
                                                                Graphics.GPipe.Internal.Expr.ExprState)>_N))))
                                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                               <Graphics.GPipe.Internal.Expr.ExprState>_N
                                               <Control.Monad.Trans.Writer.Lazy.WriterT
                                                  GHC.Base.String
                                                  (Control.Monad.Trans.State.Lazy.StateT
                                                     Graphics.GPipe.Internal.Expr.NextTempVar
                                                     GHC.Types.IO)>_R
                                               <(GHC.Base.String,
                                                 Data.SNMap.SNMap
                                                   (Data.SNMap.SNMapReaderT
                                                      [GHC.Base.String]
                                                      (Control.Monad.Trans.State.Lazy.StateT
                                                         Graphics.GPipe.Internal.Expr.ExprState
                                                         (Control.Monad.Trans.Writer.Lazy.WriterT
                                                            GHC.Base.String
                                                            (Control.Monad.Trans.State.Lazy.StateT
                                                               Graphics.GPipe.Internal.Expr.NextTempVar
                                                               GHC.Types.IO))))
                                                   [GHC.Base.String])>_N)))
                           (Trans
                                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                          <Data.SNMap.SNMap
                                             (Data.SNMap.SNMapReaderT
                                                [GHC.Base.String]
                                                (Control.Monad.Trans.State.Lazy.StateT
                                                   Graphics.GPipe.Internal.Expr.ExprState
                                                   (Control.Monad.Trans.Writer.Lazy.WriterT
                                                      GHC.Base.String
                                                      (Control.Monad.Trans.State.Lazy.StateT
                                                         Graphics.GPipe.Internal.Expr.NextTempVar
                                                         GHC.Types.IO))))
                                             [GHC.Base.String]>_N
                                          <Control.Monad.Trans.State.Lazy.StateT
                                             Graphics.GPipe.Internal.Expr.ExprState
                                             (Control.Monad.Trans.Writer.Lazy.WriterT
                                                GHC.Base.String
                                                (Control.Monad.Trans.State.Lazy.StateT
                                                   Graphics.GPipe.Internal.Expr.NextTempVar
                                                   GHC.Types.IO))>_R
                                          <GHC.Base.String>_N))
                                (Trans
                                     (Sym (Data.SNMap.N:SNMapReaderT[0]
                                               <[GHC.Base.String]>_N
                                               <Control.Monad.Trans.State.Lazy.StateT
                                                  Graphics.GPipe.Internal.Expr.ExprState
                                                  (Control.Monad.Trans.Writer.Lazy.WriterT
                                                     GHC.Base.String
                                                     (Control.Monad.Trans.State.Lazy.StateT
                                                        Graphics.GPipe.Internal.Expr.NextTempVar
                                                        GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                     (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                               <Graphics.GPipe.Internal.Expr.V>_P
                                               <GHC.Types.Float>_P))))),
                    Linear.V4.V4
                      @ (Graphics.GPipe.Internal.Expr.S
                           Graphics.GPipe.Internal.Expr.V GHC.Types.Float)
                      nt2
                        `cast`
                      (Trans
                           (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                     <Data.SNMap.SNMap
                                        (Data.SNMap.SNMapReaderT
                                           [GHC.Base.String]
                                           (Control.Monad.Trans.State.Lazy.StateT
                                              Graphics.GPipe.Internal.Expr.ExprState
                                              (Control.Monad.Trans.Writer.Lazy.WriterT
                                                 GHC.Base.String
                                                 (Control.Monad.Trans.State.Lazy.StateT
                                                    Graphics.GPipe.Internal.Expr.NextTempVar
                                                    GHC.Types.IO))))
                                        [GHC.Base.String]>_N
                                     <Control.Monad.Trans.State.Lazy.StateT
                                        Graphics.GPipe.Internal.Expr.ExprState
                                        (Control.Monad.Trans.Writer.Lazy.WriterT
                                           GHC.Base.String
                                           (Control.Monad.Trans.State.Lazy.StateT
                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                              GHC.Types.IO))>_R
                                     <GHC.Base.String>_N))
                           (Trans
                                (Sym (Data.SNMap.N:SNMapReaderT[0]
                                          <[GHC.Base.String]>_N
                                          <Control.Monad.Trans.State.Lazy.StateT
                                             Graphics.GPipe.Internal.Expr.ExprState
                                             (Control.Monad.Trans.Writer.Lazy.WriterT
                                                GHC.Base.String
                                                (Control.Monad.Trans.State.Lazy.StateT
                                                   Graphics.GPipe.Internal.Expr.NextTempVar
                                                   GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                          <Graphics.GPipe.Internal.Expr.V>_P <GHC.Types.Float>_P))))
                      nt
                        `cast`
                      (Trans
                           (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                     <Data.SNMap.SNMap
                                        (Data.SNMap.SNMapReaderT
                                           [GHC.Base.String]
                                           (Control.Monad.Trans.State.Lazy.StateT
                                              Graphics.GPipe.Internal.Expr.ExprState
                                              (Control.Monad.Trans.Writer.Lazy.WriterT
                                                 GHC.Base.String
                                                 (Control.Monad.Trans.State.Lazy.StateT
                                                    Graphics.GPipe.Internal.Expr.NextTempVar
                                                    GHC.Types.IO))))
                                        [GHC.Base.String]>_N
                                     <Control.Monad.Trans.State.Lazy.StateT
                                        Graphics.GPipe.Internal.Expr.ExprState
                                        (Control.Monad.Trans.Writer.Lazy.WriterT
                                           GHC.Base.String
                                           (Control.Monad.Trans.State.Lazy.StateT
                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                              GHC.Types.IO))>_R
                                     <GHC.Base.String>_N))
                           (Trans
                                (Sym (Data.SNMap.N:SNMapReaderT[0]
                                          <[GHC.Base.String]>_N
                                          <Control.Monad.Trans.State.Lazy.StateT
                                             Graphics.GPipe.Internal.Expr.ExprState
                                             (Control.Monad.Trans.Writer.Lazy.WriterT
                                                GHC.Base.String
                                                (Control.Monad.Trans.State.Lazy.StateT
                                                   Graphics.GPipe.Internal.Expr.NextTempVar
                                                   GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                          <Graphics.GPipe.Internal.Expr.V>_P <GHC.Types.Float>_P))))
                      Main.rotation4
                        `cast`
                      (Trans
                           (<Data.SNMap.SNMap
                               (Data.SNMap.SNMapReaderT
                                  [GHC.Base.String]
                                  (Control.Monad.Trans.State.Lazy.StateT
                                     Graphics.GPipe.Internal.Expr.ExprState
                                     (Control.Monad.Trans.Writer.Lazy.WriterT
                                        GHC.Base.String
                                        (Control.Monad.Trans.State.Lazy.StateT
                                           Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                               [GHC.Base.String]>_R
                            ->_R Trans
                                     (<Graphics.GPipe.Internal.Expr.ExprState>_R
                                      ->_R Trans
                                               (<Graphics.GPipe.Internal.Expr.NextTempVar>_R
                                                ->_R Sym (GHC.Types.N:IO[0]
                                                              <((((GHC.Base.String,
                                                                   Data.SNMap.SNMap
                                                                     (Data.SNMap.SNMapReaderT
                                                                        [GHC.Base.String]
                                                                        (Control.Monad.Trans.State.Lazy.StateT
                                                                           Graphics.GPipe.Internal.Expr.ExprState
                                                                           (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                              GHC.Base.String
                                                                              (Control.Monad.Trans.State.Lazy.StateT
                                                                                 Graphics.GPipe.Internal.Expr.NextTempVar
                                                                                 GHC.Types.IO))))
                                                                     [GHC.Base.String]),
                                                                  Graphics.GPipe.Internal.Expr.ExprState),
                                                                 GHC.Base.String),
                                                                Graphics.GPipe.Internal.Expr.NextTempVar)>_R))
                                               (Trans
                                                    (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                              <Graphics.GPipe.Internal.Expr.NextTempVar>_N
                                                              <GHC.Types.IO>_R
                                                              <(((GHC.Base.String,
                                                                  Data.SNMap.SNMap
                                                                    (Data.SNMap.SNMapReaderT
                                                                       [GHC.Base.String]
                                                                       (Control.Monad.Trans.State.Lazy.StateT
                                                                          Graphics.GPipe.Internal.Expr.ExprState
                                                                          (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                             GHC.Base.String
                                                                             (Control.Monad.Trans.State.Lazy.StateT
                                                                                Graphics.GPipe.Internal.Expr.NextTempVar
                                                                                GHC.Types.IO))))
                                                                    [GHC.Base.String]),
                                                                 Graphics.GPipe.Internal.Expr.ExprState),
                                                                GHC.Base.String)>_N))
                                                    (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                              <GHC.Base.String>_N
                                                              <Control.Monad.Trans.State.Lazy.StateT
                                                                 Graphics.GPipe.Internal.Expr.NextTempVar
                                                                 GHC.Types.IO>_R
                                                              <((GHC.Base.String,
                                                                 Data.SNMap.SNMap
                                                                   (Data.SNMap.SNMapReaderT
                                                                      [GHC.Base.String]
                                                                      (Control.Monad.Trans.State.Lazy.StateT
                                                                         Graphics.GPipe.Internal.Expr.ExprState
                                                                         (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                            GHC.Base.String
                                                                            (Control.Monad.Trans.State.Lazy.StateT
                                                                               Graphics.GPipe.Internal.Expr.NextTempVar
                                                                               GHC.Types.IO))))
                                                                   [GHC.Base.String]),
                                                                Graphics.GPipe.Internal.Expr.ExprState)>_N))))
                                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                               <Graphics.GPipe.Internal.Expr.ExprState>_N
                                               <Control.Monad.Trans.Writer.Lazy.WriterT
                                                  GHC.Base.String
                                                  (Control.Monad.Trans.State.Lazy.StateT
                                                     Graphics.GPipe.Internal.Expr.NextTempVar
                                                     GHC.Types.IO)>_R
                                               <(GHC.Base.String,
                                                 Data.SNMap.SNMap
                                                   (Data.SNMap.SNMapReaderT
                                                      [GHC.Base.String]
                                                      (Control.Monad.Trans.State.Lazy.StateT
                                                         Graphics.GPipe.Internal.Expr.ExprState
                                                         (Control.Monad.Trans.Writer.Lazy.WriterT
                                                            GHC.Base.String
                                                            (Control.Monad.Trans.State.Lazy.StateT
                                                               Graphics.GPipe.Internal.Expr.NextTempVar
                                                               GHC.Types.IO))))
                                                   [GHC.Base.String])>_N)))
                           (Trans
                                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                          <Data.SNMap.SNMap
                                             (Data.SNMap.SNMapReaderT
                                                [GHC.Base.String]
                                                (Control.Monad.Trans.State.Lazy.StateT
                                                   Graphics.GPipe.Internal.Expr.ExprState
                                                   (Control.Monad.Trans.Writer.Lazy.WriterT
                                                      GHC.Base.String
                                                      (Control.Monad.Trans.State.Lazy.StateT
                                                         Graphics.GPipe.Internal.Expr.NextTempVar
                                                         GHC.Types.IO))))
                                             [GHC.Base.String]>_N
                                          <Control.Monad.Trans.State.Lazy.StateT
                                             Graphics.GPipe.Internal.Expr.ExprState
                                             (Control.Monad.Trans.Writer.Lazy.WriterT
                                                GHC.Base.String
                                                (Control.Monad.Trans.State.Lazy.StateT
                                                   Graphics.GPipe.Internal.Expr.NextTempVar
                                                   GHC.Types.IO))>_R
                                          <GHC.Base.String>_N))
                                (Trans
                                     (Sym (Data.SNMap.N:SNMapReaderT[0]
                                               <[GHC.Base.String]>_N
                                               <Control.Monad.Trans.State.Lazy.StateT
                                                  Graphics.GPipe.Internal.Expr.ExprState
                                                  (Control.Monad.Trans.Writer.Lazy.WriterT
                                                     GHC.Base.String
                                                     (Control.Monad.Trans.State.Lazy.StateT
                                                        Graphics.GPipe.Internal.Expr.NextTempVar
                                                        GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                     (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                               <Graphics.GPipe.Internal.Expr.V>_P
                                               <GHC.Types.Float>_P)))))
                      Main.rotation4
                        `cast`
                      (Trans
                           (<Data.SNMap.SNMap
                               (Data.SNMap.SNMapReaderT
                                  [GHC.Base.String]
                                  (Control.Monad.Trans.State.Lazy.StateT
                                     Graphics.GPipe.Internal.Expr.ExprState
                                     (Control.Monad.Trans.Writer.Lazy.WriterT
                                        GHC.Base.String
                                        (Control.Monad.Trans.State.Lazy.StateT
                                           Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                               [GHC.Base.String]>_R
                            ->_R Trans
                                     (<Graphics.GPipe.Internal.Expr.ExprState>_R
                                      ->_R Trans
                                               (<Graphics.GPipe.Internal.Expr.NextTempVar>_R
                                                ->_R Sym (GHC.Types.N:IO[0]
                                                              <((((GHC.Base.String,
                                                                   Data.SNMap.SNMap
                                                                     (Data.SNMap.SNMapReaderT
                                                                        [GHC.Base.String]
                                                                        (Control.Monad.Trans.State.Lazy.StateT
                                                                           Graphics.GPipe.Internal.Expr.ExprState
                                                                           (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                              GHC.Base.String
                                                                              (Control.Monad.Trans.State.Lazy.StateT
                                                                                 Graphics.GPipe.Internal.Expr.NextTempVar
                                                                                 GHC.Types.IO))))
                                                                     [GHC.Base.String]),
                                                                  Graphics.GPipe.Internal.Expr.ExprState),
                                                                 GHC.Base.String),
                                                                Graphics.GPipe.Internal.Expr.NextTempVar)>_R))
                                               (Trans
                                                    (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                              <Graphics.GPipe.Internal.Expr.NextTempVar>_N
                                                              <GHC.Types.IO>_R
                                                              <(((GHC.Base.String,
                                                                  Data.SNMap.SNMap
                                                                    (Data.SNMap.SNMapReaderT
                                                                       [GHC.Base.String]
                                                                       (Control.Monad.Trans.State.Lazy.StateT
                                                                          Graphics.GPipe.Internal.Expr.ExprState
                                                                          (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                             GHC.Base.String
                                                                             (Control.Monad.Trans.State.Lazy.StateT
                                                                                Graphics.GPipe.Internal.Expr.NextTempVar
                                                                                GHC.Types.IO))))
                                                                    [GHC.Base.String]),
                                                                 Graphics.GPipe.Internal.Expr.ExprState),
                                                                GHC.Base.String)>_N))
                                                    (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                              <GHC.Base.String>_N
                                                              <Control.Monad.Trans.State.Lazy.StateT
                                                                 Graphics.GPipe.Internal.Expr.NextTempVar
                                                                 GHC.Types.IO>_R
                                                              <((GHC.Base.String,
                                                                 Data.SNMap.SNMap
                                                                   (Data.SNMap.SNMapReaderT
                                                                      [GHC.Base.String]
                                                                      (Control.Monad.Trans.State.Lazy.StateT
                                                                         Graphics.GPipe.Internal.Expr.ExprState
                                                                         (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                            GHC.Base.String
                                                                            (Control.Monad.Trans.State.Lazy.StateT
                                                                               Graphics.GPipe.Internal.Expr.NextTempVar
                                                                               GHC.Types.IO))))
                                                                   [GHC.Base.String]),
                                                                Graphics.GPipe.Internal.Expr.ExprState)>_N))))
                                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                               <Graphics.GPipe.Internal.Expr.ExprState>_N
                                               <Control.Monad.Trans.Writer.Lazy.WriterT
                                                  GHC.Base.String
                                                  (Control.Monad.Trans.State.Lazy.StateT
                                                     Graphics.GPipe.Internal.Expr.NextTempVar
                                                     GHC.Types.IO)>_R
                                               <(GHC.Base.String,
                                                 Data.SNMap.SNMap
                                                   (Data.SNMap.SNMapReaderT
                                                      [GHC.Base.String]
                                                      (Control.Monad.Trans.State.Lazy.StateT
                                                         Graphics.GPipe.Internal.Expr.ExprState
                                                         (Control.Monad.Trans.Writer.Lazy.WriterT
                                                            GHC.Base.String
                                                            (Control.Monad.Trans.State.Lazy.StateT
                                                               Graphics.GPipe.Internal.Expr.NextTempVar
                                                               GHC.Types.IO))))
                                                   [GHC.Base.String])>_N)))
                           (Trans
                                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                          <Data.SNMap.SNMap
                                             (Data.SNMap.SNMapReaderT
                                                [GHC.Base.String]
                                                (Control.Monad.Trans.State.Lazy.StateT
                                                   Graphics.GPipe.Internal.Expr.ExprState
                                                   (Control.Monad.Trans.Writer.Lazy.WriterT
                                                      GHC.Base.String
                                                      (Control.Monad.Trans.State.Lazy.StateT
                                                         Graphics.GPipe.Internal.Expr.NextTempVar
                                                         GHC.Types.IO))))
                                             [GHC.Base.String]>_N
                                          <Control.Monad.Trans.State.Lazy.StateT
                                             Graphics.GPipe.Internal.Expr.ExprState
                                             (Control.Monad.Trans.Writer.Lazy.WriterT
                                                GHC.Base.String
                                                (Control.Monad.Trans.State.Lazy.StateT
                                                   Graphics.GPipe.Internal.Expr.NextTempVar
                                                   GHC.Types.IO))>_R
                                          <GHC.Base.String>_N))
                                (Trans
                                     (Sym (Data.SNMap.N:SNMapReaderT[0]
                                               <[GHC.Base.String]>_N
                                               <Control.Monad.Trans.State.Lazy.StateT
                                                  Graphics.GPipe.Internal.Expr.ExprState
                                                  (Control.Monad.Trans.Writer.Lazy.WriterT
                                                     GHC.Base.String
                                                     (Control.Monad.Trans.State.Lazy.StateT
                                                        Graphics.GPipe.Internal.Expr.NextTempVar
                                                        GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                     (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                               <Graphics.GPipe.Internal.Expr.V>_P
                                               <GHC.Types.Float>_P))))),
                    Main.rotation5, Main.rotation1 #) } } }) -}
a7fcd793b8606cac7211ca5df5b1d36e
  $wunsafeDrop :: GHC.Prim.Int# -> [a1] -> [a1]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U>,
     Inline: [0] -}
2047f13b6ab2fb025d08219cf8c293b1
  type role App phantom phantom
  data App os f
    = App {fVertices :: Graphics.GPipe.Internal.Buffer.Buffer
                          os
                          (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
                           Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float),
           fMatrixUniforms :: Graphics.GPipe.Internal.Buffer.Buffer
                                os
                                (Graphics.GPipe.Internal.Buffer.Uniform
                                   (Linear.Matrix.M44
                                      (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float))),
           fScalarUniforms :: Graphics.GPipe.Internal.Buffer.Buffer
                                os
                                (Graphics.GPipe.Internal.Buffer.Uniform
                                   (Graphics.GPipe.Internal.Buffer.B GHC.Types.Float)),
           fRasterOptions :: (Graphics.GPipe.Internal.FragmentStream.Side,
                              Graphics.GPipe.Internal.FragmentStream.ViewPort,
                              Graphics.GPipe.Internal.FragmentStream.DepthRange),
           fMatrixValues :: [Linear.Matrix.M44 GHC.Types.Float],
           fScalarValues :: [GHC.Types.Float]}
edbf80db83d3b8ac0dc9d823210399c5
  class HasMatrixUniforms s a | s -> a where
    matrixUniforms :: Control.Lens.Type.Lens' s a
    {-# MINIMAL matrixUniforms #-}
e8398b51bd5b71321a2815204b65547f
  class HasMatrixValues s a | s -> a where
    matrixValues :: Control.Lens.Type.Lens' s a
    {-# MINIMAL matrixValues #-}
75ebbfd45a8f94ec22cc1a2d14e70ee1
  class HasPrimitiveArray s a | s -> a where
    primitiveArray :: Control.Lens.Type.Lens' s a
    {-# MINIMAL primitiveArray #-}
4522f32a2132c650bbdb6626e211951f
  class HasRasterOptions s a | s -> a where
    rasterOptions :: Control.Lens.Type.Lens' s a
    {-# MINIMAL rasterOptions #-}
38fe17e69f08a93abb304ce05bb8e04c
  class HasScalarUniforms s a | s -> a where
    scalarUniforms :: Control.Lens.Type.Lens' s a
    {-# MINIMAL scalarUniforms #-}
99c56a6fa50e64ad36d5fd9750439073
  class HasScalarValues s a | s -> a where
    scalarValues :: Control.Lens.Type.Lens' s a
    {-# MINIMAL scalarValues #-}
1094992939832b0ceca30b079f3bc960
  data ShaderData
    = ShaderData {fPrimitiveArray :: Graphics.GPipe.Internal.PrimitiveArray.PrimitiveArray
                                       Graphics.GPipe.Internal.PrimitiveArray.Triangles
                                       (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
                                        Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float),
                  fRasterOptions :: (Graphics.GPipe.Internal.FragmentStream.Side,
                                     Graphics.GPipe.Internal.FragmentStream.ViewPort,
                                     Graphics.GPipe.Internal.FragmentStream.DepthRange)}
86270587ada053b166f1ed6f6ae26f2d
  getJuicyPixel ::
    Codec.Picture.Types.ColorSpaceConvertible
      a Codec.Picture.Types.PixelRGB8 =>
    [Linear.V3.V3 Codec.Picture.Types.Pixel8]
    -> t -> t1 -> a -> [Linear.V3.V3 Codec.Picture.Types.Pixel8]
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,1*U(A,A,1*C1(U(U,U,U)),A)><L,U><L,A><L,A><L,U>m2,
     Unfolding: InlineRule (5, True, False)
                (\ @ t
                   @ t1
                   @ a
                   ($dColorSpaceConvertible :: Codec.Picture.Types.ColorSpaceConvertible
                                                 a Codec.Picture.Types.PixelRGB8)
                   (xs :: [Linear.V3.V3 Codec.Picture.Types.Pixel8])
                   (_x :: t)
                   (_y :: t1)
                   (pix :: a) ->
                 GHC.Types.:
                   @ (Linear.V3.V3 Codec.Picture.Types.Pixel8)
                   (case Codec.Picture.Types.convertPixel
                           @ a
                           @ Codec.Picture.Types.PixelRGB8
                           $dColorSpaceConvertible
                           pix of wild { Codec.Picture.Types.PixelRGB8 dt dt1 dt2 ->
                    Linear.V3.V3
                      @ Codec.Picture.Types.Pixel8
                      (GHC.Word.W8# dt)
                      (GHC.Word.W8# dt1)
                      (GHC.Word.W8# dt2) })
                   xs) -}
cb63d8ddc96f1aa66101f9c8b5c381ee
  loadTexture ::
    Control.Monad.IO.Class.MonadIO m =>
    GHC.IO.FilePath
    -> Graphics.GPipe.Internal.Context.ContextT
         w
         os
         f
         m
         (Data.Either.Either
            a
            (Linear.V2.V2 GHC.Types.Int,
             Graphics.GPipe.Internal.Texture.Texture2D
               os
               (Graphics.GPipe.Internal.Format.Format
                  Graphics.GPipe.Internal.Format.RGBFloat)))
  {- Arity: 1, Strictness: <L,U(U(U(U,U,U,U,U),U,U,U,U),C(U))> -}
c064c9c5112a6e9726412f9c1455d299
  loadTexture1 ::
    GHC.IO.FilePath
    -> (Graphics.GPipe.Internal.Context.ContextHandle w,
        (Graphics.GPipe.Internal.Context.ContextData,
         Graphics.GPipe.Internal.Context.SharedContextDatas))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            a
            (Linear.V2.V2 GHC.Types.Int,
             Graphics.GPipe.Internal.Texture.Texture2D
               os
               (Graphics.GPipe.Internal.Format.Format
                  Graphics.GPipe.Internal.Format.RGBFloat)) #)
  {- Arity: 3, Strictness: <L,U><L,U(U,U)><S,U>,
     Unfolding: (\ @ w
                   @ os
                   @ f
                   @ a
                   (fn :: GHC.IO.FilePath)
                   (eta :: (Graphics.GPipe.Internal.Context.ContextHandle w,
                            (Graphics.GPipe.Internal.Context.ContextData,
                             Graphics.GPipe.Internal.Context.SharedContextDatas)))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        fn
                        GHC.Types.True
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Codec.Picture.readBitmap2
                        Codec.Picture.decodeImage
                        fn
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   Data.Either.Left ipv4 -> Main.$wpoly_fail @ w @ f @ a @ os ipv2
                   Data.Either.Right ds
                   -> case ds of wild1 {
                        DEFAULT -> Main.$wpoly_fail @ w @ f @ a @ os ipv2
                        Codec.Picture.Types.ImageRGB8 image'
                        -> let {
                             size' :: Linear.V2.V2 GHC.Types.Int
                             = case image' of wild2 { Codec.Picture.Types.Image dt dt1 ds3 ->
                               Linear.V2.V2 @ GHC.Types.Int (GHC.Types.I# dt) (GHC.Types.I# dt1) }
                           } in
                           case ((Main.loadTexture7
                                    @ os
                                    @ w
                                    @ f
                                    Graphics.GPipe.Internal.Format.$WSRGB8
                                    size'
                                    GHC.Base.maxInt)
                                   `cast`
                                 (Trans
                                      (Graphics.GPipe.Internal.Context.N:ContextT[0]
                                           <w>_R
                                           <os>_P
                                           <f>_P <GHC.Types.IO>_N <Graphics.GPipe.Internal.Texture.Texture2D
                                                                     os
                                                                     (Graphics.GPipe.Internal.Format.Format
                                                                        Graphics.GPipe.Internal.Format.RGBFloat)>_N)
                                      (Control.Monad.Trans.Reader.N:ReaderT[0]
                                           <*>_N
                                           <(Graphics.GPipe.Internal.Context.ContextHandle w,
                                             (Graphics.GPipe.Internal.Context.ContextData,
                                              Graphics.GPipe.Internal.Context.SharedContextDatas))>_R
                                           <GHC.Types.IO>_R
                                           <Graphics.GPipe.Internal.Texture.Texture2D
                                              os
                                              (Graphics.GPipe.Internal.Format.Format
                                                 Graphics.GPipe.Internal.Format.RGBFloat)>_N))
                                   eta)
                                  `cast`
                                (GHC.Types.N:IO[0]
                                     <Graphics.GPipe.Internal.Texture.Texture2D
                                        os
                                        (Graphics.GPipe.Internal.Format.Format
                                           Graphics.GPipe.Internal.Format.RGBFloat)>_R)
                                  ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                           case ((Main.loadTexture4
                                    @ os
                                    @ w
                                    @ f
                                    ipv5
                                    Main.loadTexture3
                                    Main.loadTexture2
                                    size'
                                    (case image' of wild2 { Codec.Picture.Types.Image dt dt1 ds4 ->
                                     case ds4 of vec { Data.Vector.Storable.Vector ipv6 ipv7 ipv8 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.>=# 0# dt1) of wild3 {
                                       GHC.Types.False
                                       -> letrec {
                                            $wlfold :: GHC.Prim.Int#
                                                       -> [Linear.V3.V3 Codec.Picture.Types.Pixel8]
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.Int#
                                                       -> [Linear.V3.V3 Codec.Picture.Types.Pixel8]
                                              {- Arity: 4, Strictness: <L,U><L,U><S,U><L,U>,
                                                 Inline: [0] -}
                                            = \ (ww :: GHC.Prim.Int#)
                                                (w1 :: [Linear.V3.V3 Codec.Picture.Types.Pixel8])
                                                (ww1 :: GHC.Prim.Int#)
                                                (ww2 :: GHC.Prim.Int#) ->
                                              case GHC.Prim.tagToEnum#
                                                     @ GHC.Types.Bool
                                                     (GHC.Prim.>=# ww1 dt) of wild4 {
                                                GHC.Types.False
                                                -> $wlfold
                                                     ww
                                                     (GHC.Types.:
                                                        @ (Linear.V3.V3 Codec.Picture.Types.Pixel8)
                                                        (case GHC.Prim.readWord8OffAddr#
                                                                @ GHC.Prim.RealWorld
                                                                ipv7
                                                                ww2
                                                                GHC.Prim.realWorld# of ds5 { (#,#) ipv9 ipv10 ->
                                                         case GHC.Prim.touch#
                                                                @ 'GHC.Types.PtrRepLifted
                                                                @ GHC.ForeignPtr.ForeignPtrContents
                                                                ipv8
                                                                ipv9 of s' { DEFAULT ->
                                                         case GHC.Prim.readWord8OffAddr#
                                                                @ GHC.Prim.RealWorld
                                                                ipv7
                                                                (GHC.Prim.+# ww2 1#)
                                                                GHC.Prim.realWorld# of ds6 { (#,#) ipv11 ipv12 ->
                                                         case GHC.Prim.touch#
                                                                @ 'GHC.Types.PtrRepLifted
                                                                @ GHC.ForeignPtr.ForeignPtrContents
                                                                ipv8
                                                                ipv11 of s'1 { DEFAULT ->
                                                         case GHC.Prim.readWord8OffAddr#
                                                                @ GHC.Prim.RealWorld
                                                                ipv7
                                                                (GHC.Prim.+# ww2 2#)
                                                                GHC.Prim.realWorld# of ds7 { (#,#) ipv13 ipv14 ->
                                                         case GHC.Prim.touch#
                                                                @ 'GHC.Types.PtrRepLifted
                                                                @ GHC.ForeignPtr.ForeignPtrContents
                                                                ipv8
                                                                ipv13 of s'2 { DEFAULT ->
                                                         Linear.V3.V3
                                                           @ Codec.Picture.Types.Pixel8
                                                           (GHC.Word.W8# ipv10)
                                                           (GHC.Word.W8# ipv12)
                                                           (GHC.Word.W8# ipv14) } } } } } })
                                                        w1)
                                                     (GHC.Prim.+# ww1 1#)
                                                     (GHC.Prim.+# ww2 3#)
                                                GHC.Types.True
                                                -> let {
                                                     ipv9 :: GHC.Prim.Int# = GHC.Prim.+# ww 1#
                                                   } in
                                                   case GHC.Prim.tagToEnum#
                                                          @ GHC.Types.Bool
                                                          (GHC.Prim.>=# ipv9 dt1) of wild5 {
                                                     GHC.Types.False -> $wlfold ipv9 w1 0# ww2
                                                     GHC.Types.True -> w1 } }
                                          } in
                                          $wlfold
                                            0#
                                            (GHC.Types.[]
                                               @ (Linear.V3.V3 Codec.Picture.Types.Pixel8))
                                            0#
                                            0#
                                       GHC.Types.True
                                       -> GHC.Types.[]
                                            @ (Linear.V3.V3 Codec.Picture.Types.Pixel8) } } }))
                                   `cast`
                                 (Trans
                                      (Graphics.GPipe.Internal.Context.N:ContextT[0]
                                           <w>_R <os>_P <f>_P <GHC.Types.IO>_N <()>_N)
                                      (Control.Monad.Trans.Reader.N:ReaderT[0]
                                           <*>_N
                                           <(Graphics.GPipe.Internal.Context.ContextHandle w,
                                             (Graphics.GPipe.Internal.Context.ContextData,
                                              Graphics.GPipe.Internal.Context.SharedContextDatas))>_R
                                           <GHC.Types.IO>_R
                                           <()>_N))
                                   eta)
                                  `cast`
                                (GHC.Types.N:IO[0] <()>_R)
                                  ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                           case ipv5 of wild2 {
                             Graphics.GPipe.Internal.Texture.Texture2D texn ds5 ds6
                             -> case (Graphics.GPipe.Internal.Texture.genMips1
                                        @ GHC.Types.IO
                                        @ w
                                        @ os
                                        @ f
                                        Control.Monad.IO.Class.$fMonadIOIO
                                        texn
                                        Graphics.GPipe.Internal.Texture.generateTexture2DMipmap1
                                        eta)
                                       `cast`
                                     (GHC.Types.N:IO[0] <()>_R)
                                       ipv6 of ds7 { (#,#) ipv8 ipv9 ->
                                (# ipv8,
                                   Data.Either.Right
                                     @ a
                                     @ (Linear.V2.V2 GHC.Types.Int,
                                        Graphics.GPipe.Internal.Texture.Texture2D
                                          os
                                          (Graphics.GPipe.Internal.Format.Format
                                             Graphics.GPipe.Internal.Format.RGBFloat))
                                     (size', wild2) #) }
                             Graphics.GPipe.Internal.Texture.RenderBuffer2D ipv8 ipv9
                             -> (# ipv6,
                                   Data.Either.Right
                                     @ a
                                     @ (Linear.V2.V2 GHC.Types.Int,
                                        Graphics.GPipe.Internal.Texture.Texture2D
                                          os
                                          (Graphics.GPipe.Internal.Format.Format
                                             Graphics.GPipe.Internal.Format.RGBFloat))
                                     (size', wild2) #) } } } } } } }) -}
dd9c9f9921136a009f4656093e795c16
  loadTexture2 :: Linear.V2.V2 GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Int
                   Main.loadTexture3
                   Main.loadTexture3) -}
eb20adb0b3e75d7c4fbdb110e7eb99d7
  loadTexture3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
1000c1612bcfb5a8d17ab8f17520d390
  loadTexture4 ::
    Graphics.GPipe.Internal.Texture.Texture2D
      os
      (Graphics.GPipe.Internal.Format.Format
         Graphics.GPipe.Internal.Format.RGBFloat)
    -> Graphics.GPipe.Internal.Texture.Level
    -> Graphics.GPipe.Internal.Texture.StartPos2
    -> Graphics.GPipe.Internal.Texture.Size2
    -> [Linear.V3.V3 Codec.Picture.Types.Pixel8]
    -> Graphics.GPipe.Internal.Context.ContextT w os f GHC.Types.IO ()
  {- Unfolding: (\ @ os @ w @ f ->
                 Graphics.GPipe.Internal.Texture.writeTexture2D
                   @ (Graphics.GPipe.Internal.Buffer.Normalized
                        (Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8))
                   @ Graphics.GPipe.Internal.Format.RGBFloat
                   @ (Linear.V3.V3 Codec.Picture.Types.Pixel8)
                   @ w
                   @ os
                   @ f
                   @ GHC.Types.IO
                   Control.Monad.IO.Class.$fMonadIOIO
                   Main.$s$fBufferFormatNormalized
                   Graphics.GPipe.Internal.Format.$fColorSampleableRGBFloat
                   Main.loadTexture6
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) (Trans
                                                               (Sym (Graphics.GPipe.Internal.Buffer.D:R:BufferColor[21]))
                                                               (Graphics.GPipe.Internal.Buffer.BufferColor
                                                                  (Sym (Graphics.GPipe.Internal.Format.D:R:ColorRGBFloata[0]
                                                                            (Graphics.GPipe.Internal.Format.D:R:ColorElementRGBFloat[0])))
                                                                  <Linear.V3.V3
                                                                     GHC.Word.Word8>_N)_N) <Graphics.GPipe.Internal.Buffer.Normalized
                                                                                              (Graphics.GPipe.Internal.Buffer.B3
                                                                                                 GHC.Word.Word8)>_N)
                   Main.loadTexture5
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0] <*>_N) <Linear.V3.V3
                                                             Codec.Picture.Types.Pixel8>_N (Trans
                                                                                                (Sym (Graphics.GPipe.Internal.Buffer.D:R:HostFormatB30[0]))
                                                                                                (Sym (Graphics.GPipe.Internal.Buffer.D:R:HostFormatNormalized[0]
                                                                                                          <Graphics.GPipe.Internal.Buffer.B3
                                                                                                             GHC.Word.Word8>_N))))) -}
94c40e48d3358bc4919bd78930ae1d86
  loadTexture5 ::
    Linear.V3.V3 Codec.Picture.Types.Pixel8
    GHC.Types.~~ Linear.V3.V3 GHC.Word.Word8
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Linear.V3.V3 Codec.Picture.Types.Pixel8)
                   @ (Linear.V3.V3 GHC.Word.Word8)
                   @~ <Linear.V3.V3 Codec.Picture.Types.Pixel8>_N) -}
f78b99fd26c99bee30f32224ad35d90f
  loadTexture6 ::
    Graphics.GPipe.Internal.Buffer.Normalized
      (Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8)
    GHC.Types.~~ Graphics.GPipe.Internal.Buffer.Normalized
                   (Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Graphics.GPipe.Internal.Buffer.Normalized
                        (Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8))
                   @ (Graphics.GPipe.Internal.Buffer.Normalized
                        (Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8))
                   @~ <Graphics.GPipe.Internal.Buffer.Normalized
                         (Graphics.GPipe.Internal.Buffer.B3 GHC.Word.Word8)>_N) -}
2e3fa3c1c16b6b69db2250744ee8ef6a
  loadTexture7 ::
    Graphics.GPipe.Internal.Format.Format
      Graphics.GPipe.Internal.Format.RGBFloat
    -> Graphics.GPipe.Internal.Texture.Size2
    -> Graphics.GPipe.Internal.Texture.MaxLevels
    -> Graphics.GPipe.Internal.Context.ContextT
         w
         os
         f
         GHC.Types.IO
         (Graphics.GPipe.Internal.Texture.Texture2D
            os
            (Graphics.GPipe.Internal.Format.Format
               Graphics.GPipe.Internal.Format.RGBFloat))
  {- Unfolding: (\ @ os @ w @ f ->
                 Graphics.GPipe.Internal.Texture.newTexture2D
                   @ w
                   @ os
                   @ f
                   @ Graphics.GPipe.Internal.Format.RGBFloat
                   @ GHC.Types.IO
                   Graphics.GPipe.Internal.Format.$fColorSampleableRGBFloat_$cgetGlFormat
                     `cast`
                   (Sym (Graphics.GPipe.Internal.Format.N:TextureFormat[0]
                             <Graphics.GPipe.Internal.Format.RGBFloat>_N))
                   Control.Monad.IO.Class.$fMonadIOIO) -}
7812aa017a17785276cf8d34c1cd3a47
  loop ::
    (Graphics.GPipe.Internal.Buffer.HostFormat b
     GHC.Prim.~# Linear.V4.V4 (Linear.V4.V4 a),
     Graphics.GPipe.Internal.Format.Color c GHC.Types.Float
     GHC.Prim.~# Linear.V3.V3 a1,
     Main.HasMatrixUniforms
       t (Graphics.GPipe.Internal.Buffer.Buffer os b),
     Main.HasMatrixValues t [Linear.Matrix.M44 a],
     Main.HasRasterOptions
       t
       (Graphics.GPipe.Internal.FragmentStream.Side,
        Graphics.GPipe.Internal.FragmentStream.ViewPort,
        Graphics.GPipe.Internal.FragmentStream.DepthRange),
     Main.HasScalarUniforms
       t (Graphics.GPipe.Internal.Buffer.Buffer os b1),
     Main.HasScalarValues
       t [Graphics.GPipe.Internal.Buffer.HostFormat b1],
     Graphics.WaveFront.Lenses.HasVertices
       t
       (Graphics.GPipe.Internal.Buffer.Buffer
          os
          (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
           Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)),
     Linear.Epsilon.Epsilon a, Control.Monad.IO.Class.MonadIO m,
     Graphics.GPipe.Internal.Format.ContextColorFormat c,
     Graphics.GPipe.Internal.Format.DepthRenderable ds,
     Control.Monad.Exception.MonadException m,
     GHC.Real.Fractional (Graphics.GPipe.Internal.Buffer.HostFormat b1),
     GHC.Real.Fractional a1, GHC.Float.Floating a) =>
    (Main.ShaderData
     -> Graphics.GPipe.Internal.Context.Render
          os (Graphics.GPipe.Internal.Format.ContextFormat c ds) ())
    -> t
    -> Graphics.GPipe.Internal.Context.ContextT
         Graphics.GPipe.Context.GLFW.Resource.GLFWWindow
         os
         (Graphics.GPipe.Internal.Format.ContextFormat c ds)
         m
         ()
  {- Arity: 16,
     Strictness: <L,U><L,U><L,C(U)><L,C(U)><L,C(U)><L,C(U)><L,C(U)><L,1*C1(U)><L,U(U,C(U))><L,U(U,C(U))><L,U(U(U(A,A,A,A,C(C1(U)),A,A),A,A),A,A,A,A)><L,A><L,A><L,U(U,C(C1(U)),A,C(U))><L,U(A,A,A,C(U))><L,U(U(U,U,U,U),U,A,A,C(U),A,A,C(U),C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (16, True, True)
                (\ @ (m :: * -> *)
                   @ os
                   @ a
                   @ b
                   @ b1
                   @ c
                   @ ds
                   @ a1
                   @ t
                   (w0 :: Graphics.GPipe.Internal.Buffer.HostFormat b
                          GHC.Prim.~# Linear.V4.V4 (Linear.V4.V4 a))
                   (w1 :: Graphics.GPipe.Internal.Format.Color c GHC.Types.Float
                          GHC.Prim.~# Linear.V3.V3 a1)
                   (w :: Main.HasMatrixUniforms
                           t (Graphics.GPipe.Internal.Buffer.Buffer os b))
                   (w2 :: Main.HasMatrixValues t [Linear.Matrix.M44 a])
                   (w3 :: Main.HasRasterOptions
                            t
                            (Graphics.GPipe.Internal.FragmentStream.Side,
                             Graphics.GPipe.Internal.FragmentStream.ViewPort,
                             Graphics.GPipe.Internal.FragmentStream.DepthRange))
                   (w4 :: Main.HasScalarUniforms
                            t (Graphics.GPipe.Internal.Buffer.Buffer os b1))
                   (w5 :: Main.HasScalarValues
                            t [Graphics.GPipe.Internal.Buffer.HostFormat b1])
                   (w6 :: Graphics.WaveFront.Lenses.HasVertices
                            t
                            (Graphics.GPipe.Internal.Buffer.Buffer
                               os
                               (Graphics.GPipe.Internal.Buffer.B4 GHC.Types.Float,
                                Graphics.GPipe.Internal.Buffer.B2 GHC.Types.Float)))
                   (w7 :: Linear.Epsilon.Epsilon a)
                   (w8 :: Control.Monad.IO.Class.MonadIO m)
                   (w9 :: Graphics.GPipe.Internal.Format.ContextColorFormat c)
                   (w10 :: Graphics.GPipe.Internal.Format.DepthRenderable ds)
                   (w11 :: Control.Monad.Exception.MonadException m)
                   (w12 :: GHC.Real.Fractional
                             (Graphics.GPipe.Internal.Buffer.HostFormat b1))
                   (w13 :: GHC.Real.Fractional a1)
                   (w14 :: GHC.Float.Floating a) ->
                 Main.$wloop
                   @ m
                   @ os
                   @ a
                   @ b
                   @ b1
                   @ c
                   @ ds
                   @ a1
                   @ t
                   @~ w0
                   @~ w1
                   w
                   w2
                   w3
                   w4
                   w5
                   w6
                   w7
                   w8
                   w9
                   w12
                   w13
                   w14) -}
d9c0dee8a685c5ed422401aaa63f23bf
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
01d62c2c484918d4b5d94b688c90c90e
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
f95c2d132d9601693edec48e10b77215
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
36ed61261be0431f344fca8b4df1883f
  plane :: GHC.Real.Fractional f => (f -> f -> a) -> f -> f -> [a]
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(1*U,C(C1(U)),A,A)><L,C(C1(U))><L,U><L,U>m2,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ f
                   @ a
                   (w :: GHC.Real.Fractional f)
                   (w1 :: f -> f -> a)
                   (w2 :: f)
                   (w3 :: f) ->
                 case Main.$wplane @ f @ a w w1 w2 w3 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.: @ a ww1 ww2 }) -}
f4faee1dff54cce6524bed7fe6b7d905
  planeXY ::
    GHC.Real.Fractional f => (f -> f -> f -> a) -> f -> f -> [a]
  {- Arity: 4,
     Strictness: <L,U(U(U,U,U,U,U,U,U),C(C1(U)),A,A)><L,C(C1(C1(U)))><L,U><L,U>,
     Unfolding: (\ @ f
                   @ a
                   ($dFractional :: GHC.Real.Fractional f)
                   (eta :: f -> f -> f -> a)
                   (eta1 :: f)
                   (eta2 :: f) ->
                 let {
                   lvl110 :: f
                   = GHC.Num.fromInteger
                       @ f
                       (GHC.Real.$p1Fractional @ f $dFractional)
                       Main.planeXY1
                 } in
                 case Main.$wplane
                        @ f
                        @ a
                        $dFractional
                        (\ (x :: f) (y :: f)[OneShot] -> eta x y lvl110)
                        eta1
                        eta2 of ww { (#,#) ww1 ww2 ->
                 Main.triangles @ a (GHC.Types.: @ a ww1 ww2) }) -}
911ef42faebd1ab707a6e9d7bc14d2af
  planeXY1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
7a90961488a609fbdb9a175110007352
  rotation ::
    Graphics.GPipe.Internal.Expr.S
      Graphics.GPipe.Internal.Expr.V GHC.Types.Float
    -> Linear.Matrix.M44
         (Graphics.GPipe.Internal.Expr.S
            Graphics.GPipe.Internal.Expr.V GHC.Types.Float)
  {- Arity: 1, Strictness: <L,C(U)>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Graphics.GPipe.Internal.Expr.S
                           Graphics.GPipe.Internal.Expr.V GHC.Types.Float) ->
                 case Main.$wrotation w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Linear.V4.V4
                   @ (Linear.V4.V4
                        (Graphics.GPipe.Internal.Expr.S
                           Graphics.GPipe.Internal.Expr.V GHC.Types.Float))
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
9f9d7ec7822718f48d5a561e03028894
  rotation1 ::
    Linear.V4.V4
      (Graphics.GPipe.Internal.Expr.S
         Graphics.GPipe.Internal.Expr.V GHC.Types.Float)
  {- Strictness: m,
     Unfolding: (Linear.V4.V4
                   @ (Graphics.GPipe.Internal.Expr.S
                        Graphics.GPipe.Internal.Expr.V GHC.Types.Float)
                   Main.rotation4
                     `cast`
                   (Trans
                        (<Data.SNMap.SNMap
                            (Data.SNMap.SNMapReaderT
                               [GHC.Base.String]
                               (Control.Monad.Trans.State.Lazy.StateT
                                  Graphics.GPipe.Internal.Expr.ExprState
                                  (Control.Monad.Trans.Writer.Lazy.WriterT
                                     GHC.Base.String
                                     (Control.Monad.Trans.State.Lazy.StateT
                                        Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                            [GHC.Base.String]>_R
                         ->_R Trans
                                  (<Graphics.GPipe.Internal.Expr.ExprState>_R
                                   ->_R Trans
                                            (<Graphics.GPipe.Internal.Expr.NextTempVar>_R
                                             ->_R Sym (GHC.Types.N:IO[0]
                                                           <((((GHC.Base.String,
                                                                Data.SNMap.SNMap
                                                                  (Data.SNMap.SNMapReaderT
                                                                     [GHC.Base.String]
                                                                     (Control.Monad.Trans.State.Lazy.StateT
                                                                        Graphics.GPipe.Internal.Expr.ExprState
                                                                        (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                           GHC.Base.String
                                                                           (Control.Monad.Trans.State.Lazy.StateT
                                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                                              GHC.Types.IO))))
                                                                  [GHC.Base.String]),
                                                               Graphics.GPipe.Internal.Expr.ExprState),
                                                              GHC.Base.String),
                                                             Graphics.GPipe.Internal.Expr.NextTempVar)>_R))
                                            (Trans
                                                 (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                           <Graphics.GPipe.Internal.Expr.NextTempVar>_N
                                                           <GHC.Types.IO>_R
                                                           <(((GHC.Base.String,
                                                               Data.SNMap.SNMap
                                                                 (Data.SNMap.SNMapReaderT
                                                                    [GHC.Base.String]
                                                                    (Control.Monad.Trans.State.Lazy.StateT
                                                                       Graphics.GPipe.Internal.Expr.ExprState
                                                                       (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                          GHC.Base.String
                                                                          (Control.Monad.Trans.State.Lazy.StateT
                                                                             Graphics.GPipe.Internal.Expr.NextTempVar
                                                                             GHC.Types.IO))))
                                                                 [GHC.Base.String]),
                                                              Graphics.GPipe.Internal.Expr.ExprState),
                                                             GHC.Base.String)>_N))
                                                 (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                           <GHC.Base.String>_N
                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                              GHC.Types.IO>_R
                                                           <((GHC.Base.String,
                                                              Data.SNMap.SNMap
                                                                (Data.SNMap.SNMapReaderT
                                                                   [GHC.Base.String]
                                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         GHC.Base.String
                                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                                            GHC.Types.IO))))
                                                                [GHC.Base.String]),
                                                             Graphics.GPipe.Internal.Expr.ExprState)>_N))))
                                  (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                            <Graphics.GPipe.Internal.Expr.ExprState>_N
                                            <Control.Monad.Trans.Writer.Lazy.WriterT
                                               GHC.Base.String
                                               (Control.Monad.Trans.State.Lazy.StateT
                                                  Graphics.GPipe.Internal.Expr.NextTempVar
                                                  GHC.Types.IO)>_R
                                            <(GHC.Base.String,
                                              Data.SNMap.SNMap
                                                (Data.SNMap.SNMapReaderT
                                                   [GHC.Base.String]
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                         GHC.Base.String
                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                            GHC.Types.IO))))
                                                [GHC.Base.String])>_N)))
                        (Trans
                             (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                       <Data.SNMap.SNMap
                                          (Data.SNMap.SNMapReaderT
                                             [GHC.Base.String]
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.ExprState
                                                (Control.Monad.Trans.Writer.Lazy.WriterT
                                                   GHC.Base.String
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.NextTempVar
                                                      GHC.Types.IO))))
                                          [GHC.Base.String]>_N
                                       <Control.Monad.Trans.State.Lazy.StateT
                                          Graphics.GPipe.Internal.Expr.ExprState
                                          (Control.Monad.Trans.Writer.Lazy.WriterT
                                             GHC.Base.String
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.NextTempVar
                                                GHC.Types.IO))>_R
                                       <GHC.Base.String>_N))
                             (Trans
                                  (Sym (Data.SNMap.N:SNMapReaderT[0]
                                            <[GHC.Base.String]>_N
                                            <Control.Monad.Trans.State.Lazy.StateT
                                               Graphics.GPipe.Internal.Expr.ExprState
                                               (Control.Monad.Trans.Writer.Lazy.WriterT
                                                  GHC.Base.String
                                                  (Control.Monad.Trans.State.Lazy.StateT
                                                     Graphics.GPipe.Internal.Expr.NextTempVar
                                                     GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                  (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                            <Graphics.GPipe.Internal.Expr.V>_P
                                            <GHC.Types.Float>_P)))))
                   Main.rotation4
                     `cast`
                   (Trans
                        (<Data.SNMap.SNMap
                            (Data.SNMap.SNMapReaderT
                               [GHC.Base.String]
                               (Control.Monad.Trans.State.Lazy.StateT
                                  Graphics.GPipe.Internal.Expr.ExprState
                                  (Control.Monad.Trans.Writer.Lazy.WriterT
                                     GHC.Base.String
                                     (Control.Monad.Trans.State.Lazy.StateT
                                        Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                            [GHC.Base.String]>_R
                         ->_R Trans
                                  (<Graphics.GPipe.Internal.Expr.ExprState>_R
                                   ->_R Trans
                                            (<Graphics.GPipe.Internal.Expr.NextTempVar>_R
                                             ->_R Sym (GHC.Types.N:IO[0]
                                                           <((((GHC.Base.String,
                                                                Data.SNMap.SNMap
                                                                  (Data.SNMap.SNMapReaderT
                                                                     [GHC.Base.String]
                                                                     (Control.Monad.Trans.State.Lazy.StateT
                                                                        Graphics.GPipe.Internal.Expr.ExprState
                                                                        (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                           GHC.Base.String
                                                                           (Control.Monad.Trans.State.Lazy.StateT
                                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                                              GHC.Types.IO))))
                                                                  [GHC.Base.String]),
                                                               Graphics.GPipe.Internal.Expr.ExprState),
                                                              GHC.Base.String),
                                                             Graphics.GPipe.Internal.Expr.NextTempVar)>_R))
                                            (Trans
                                                 (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                           <Graphics.GPipe.Internal.Expr.NextTempVar>_N
                                                           <GHC.Types.IO>_R
                                                           <(((GHC.Base.String,
                                                               Data.SNMap.SNMap
                                                                 (Data.SNMap.SNMapReaderT
                                                                    [GHC.Base.String]
                                                                    (Control.Monad.Trans.State.Lazy.StateT
                                                                       Graphics.GPipe.Internal.Expr.ExprState
                                                                       (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                          GHC.Base.String
                                                                          (Control.Monad.Trans.State.Lazy.StateT
                                                                             Graphics.GPipe.Internal.Expr.NextTempVar
                                                                             GHC.Types.IO))))
                                                                 [GHC.Base.String]),
                                                              Graphics.GPipe.Internal.Expr.ExprState),
                                                             GHC.Base.String)>_N))
                                                 (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                           <GHC.Base.String>_N
                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                              GHC.Types.IO>_R
                                                           <((GHC.Base.String,
                                                              Data.SNMap.SNMap
                                                                (Data.SNMap.SNMapReaderT
                                                                   [GHC.Base.String]
                                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         GHC.Base.String
                                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                                            GHC.Types.IO))))
                                                                [GHC.Base.String]),
                                                             Graphics.GPipe.Internal.Expr.ExprState)>_N))))
                                  (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                            <Graphics.GPipe.Internal.Expr.ExprState>_N
                                            <Control.Monad.Trans.Writer.Lazy.WriterT
                                               GHC.Base.String
                                               (Control.Monad.Trans.State.Lazy.StateT
                                                  Graphics.GPipe.Internal.Expr.NextTempVar
                                                  GHC.Types.IO)>_R
                                            <(GHC.Base.String,
                                              Data.SNMap.SNMap
                                                (Data.SNMap.SNMapReaderT
                                                   [GHC.Base.String]
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                         GHC.Base.String
                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                            GHC.Types.IO))))
                                                [GHC.Base.String])>_N)))
                        (Trans
                             (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                       <Data.SNMap.SNMap
                                          (Data.SNMap.SNMapReaderT
                                             [GHC.Base.String]
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.ExprState
                                                (Control.Monad.Trans.Writer.Lazy.WriterT
                                                   GHC.Base.String
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.NextTempVar
                                                      GHC.Types.IO))))
                                          [GHC.Base.String]>_N
                                       <Control.Monad.Trans.State.Lazy.StateT
                                          Graphics.GPipe.Internal.Expr.ExprState
                                          (Control.Monad.Trans.Writer.Lazy.WriterT
                                             GHC.Base.String
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.NextTempVar
                                                GHC.Types.IO))>_R
                                       <GHC.Base.String>_N))
                             (Trans
                                  (Sym (Data.SNMap.N:SNMapReaderT[0]
                                            <[GHC.Base.String]>_N
                                            <Control.Monad.Trans.State.Lazy.StateT
                                               Graphics.GPipe.Internal.Expr.ExprState
                                               (Control.Monad.Trans.Writer.Lazy.WriterT
                                                  GHC.Base.String
                                                  (Control.Monad.Trans.State.Lazy.StateT
                                                     Graphics.GPipe.Internal.Expr.NextTempVar
                                                     GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                  (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                            <Graphics.GPipe.Internal.Expr.V>_P
                                            <GHC.Types.Float>_P)))))
                   Main.rotation4
                     `cast`
                   (Trans
                        (<Data.SNMap.SNMap
                            (Data.SNMap.SNMapReaderT
                               [GHC.Base.String]
                               (Control.Monad.Trans.State.Lazy.StateT
                                  Graphics.GPipe.Internal.Expr.ExprState
                                  (Control.Monad.Trans.Writer.Lazy.WriterT
                                     GHC.Base.String
                                     (Control.Monad.Trans.State.Lazy.StateT
                                        Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                            [GHC.Base.String]>_R
                         ->_R Trans
                                  (<Graphics.GPipe.Internal.Expr.ExprState>_R
                                   ->_R Trans
                                            (<Graphics.GPipe.Internal.Expr.NextTempVar>_R
                                             ->_R Sym (GHC.Types.N:IO[0]
                                                           <((((GHC.Base.String,
                                                                Data.SNMap.SNMap
                                                                  (Data.SNMap.SNMapReaderT
                                                                     [GHC.Base.String]
                                                                     (Control.Monad.Trans.State.Lazy.StateT
                                                                        Graphics.GPipe.Internal.Expr.ExprState
                                                                        (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                           GHC.Base.String
                                                                           (Control.Monad.Trans.State.Lazy.StateT
                                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                                              GHC.Types.IO))))
                                                                  [GHC.Base.String]),
                                                               Graphics.GPipe.Internal.Expr.ExprState),
                                                              GHC.Base.String),
                                                             Graphics.GPipe.Internal.Expr.NextTempVar)>_R))
                                            (Trans
                                                 (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                           <Graphics.GPipe.Internal.Expr.NextTempVar>_N
                                                           <GHC.Types.IO>_R
                                                           <(((GHC.Base.String,
                                                               Data.SNMap.SNMap
                                                                 (Data.SNMap.SNMapReaderT
                                                                    [GHC.Base.String]
                                                                    (Control.Monad.Trans.State.Lazy.StateT
                                                                       Graphics.GPipe.Internal.Expr.ExprState
                                                                       (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                          GHC.Base.String
                                                                          (Control.Monad.Trans.State.Lazy.StateT
                                                                             Graphics.GPipe.Internal.Expr.NextTempVar
                                                                             GHC.Types.IO))))
                                                                 [GHC.Base.String]),
                                                              Graphics.GPipe.Internal.Expr.ExprState),
                                                             GHC.Base.String)>_N))
                                                 (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                           <GHC.Base.String>_N
                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                              GHC.Types.IO>_R
                                                           <((GHC.Base.String,
                                                              Data.SNMap.SNMap
                                                                (Data.SNMap.SNMapReaderT
                                                                   [GHC.Base.String]
                                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         GHC.Base.String
                                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                                            GHC.Types.IO))))
                                                                [GHC.Base.String]),
                                                             Graphics.GPipe.Internal.Expr.ExprState)>_N))))
                                  (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                            <Graphics.GPipe.Internal.Expr.ExprState>_N
                                            <Control.Monad.Trans.Writer.Lazy.WriterT
                                               GHC.Base.String
                                               (Control.Monad.Trans.State.Lazy.StateT
                                                  Graphics.GPipe.Internal.Expr.NextTempVar
                                                  GHC.Types.IO)>_R
                                            <(GHC.Base.String,
                                              Data.SNMap.SNMap
                                                (Data.SNMap.SNMapReaderT
                                                   [GHC.Base.String]
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                         GHC.Base.String
                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                            GHC.Types.IO))))
                                                [GHC.Base.String])>_N)))
                        (Trans
                             (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                       <Data.SNMap.SNMap
                                          (Data.SNMap.SNMapReaderT
                                             [GHC.Base.String]
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.ExprState
                                                (Control.Monad.Trans.Writer.Lazy.WriterT
                                                   GHC.Base.String
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.NextTempVar
                                                      GHC.Types.IO))))
                                          [GHC.Base.String]>_N
                                       <Control.Monad.Trans.State.Lazy.StateT
                                          Graphics.GPipe.Internal.Expr.ExprState
                                          (Control.Monad.Trans.Writer.Lazy.WriterT
                                             GHC.Base.String
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.NextTempVar
                                                GHC.Types.IO))>_R
                                       <GHC.Base.String>_N))
                             (Trans
                                  (Sym (Data.SNMap.N:SNMapReaderT[0]
                                            <[GHC.Base.String]>_N
                                            <Control.Monad.Trans.State.Lazy.StateT
                                               Graphics.GPipe.Internal.Expr.ExprState
                                               (Control.Monad.Trans.Writer.Lazy.WriterT
                                                  GHC.Base.String
                                                  (Control.Monad.Trans.State.Lazy.StateT
                                                     Graphics.GPipe.Internal.Expr.NextTempVar
                                                     GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                  (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                            <Graphics.GPipe.Internal.Expr.V>_P
                                            <GHC.Types.Float>_P)))))
                   Main.rotation2
                     `cast`
                   (Trans
                        (<Data.SNMap.SNMap
                            (Data.SNMap.SNMapReaderT
                               [GHC.Base.String]
                               (Control.Monad.Trans.State.Lazy.StateT
                                  Graphics.GPipe.Internal.Expr.ExprState
                                  (Control.Monad.Trans.Writer.Lazy.WriterT
                                     GHC.Base.String
                                     (Control.Monad.Trans.State.Lazy.StateT
                                        Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                            [GHC.Base.String]>_R
                         ->_R Trans
                                  (<Graphics.GPipe.Internal.Expr.ExprState>_R
                                   ->_R Trans
                                            (<Graphics.GPipe.Internal.Expr.NextTempVar>_R
                                             ->_R Sym (GHC.Types.N:IO[0]
                                                           <((((GHC.Base.String,
                                                                Data.SNMap.SNMap
                                                                  (Data.SNMap.SNMapReaderT
                                                                     [GHC.Base.String]
                                                                     (Control.Monad.Trans.State.Lazy.StateT
                                                                        Graphics.GPipe.Internal.Expr.ExprState
                                                                        (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                           GHC.Base.String
                                                                           (Control.Monad.Trans.State.Lazy.StateT
                                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                                              GHC.Types.IO))))
                                                                  [GHC.Base.String]),
                                                               Graphics.GPipe.Internal.Expr.ExprState),
                                                              GHC.Base.String),
                                                             Graphics.GPipe.Internal.Expr.NextTempVar)>_R))
                                            (Trans
                                                 (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                           <Graphics.GPipe.Internal.Expr.NextTempVar>_N
                                                           <GHC.Types.IO>_R
                                                           <(((GHC.Base.String,
                                                               Data.SNMap.SNMap
                                                                 (Data.SNMap.SNMapReaderT
                                                                    [GHC.Base.String]
                                                                    (Control.Monad.Trans.State.Lazy.StateT
                                                                       Graphics.GPipe.Internal.Expr.ExprState
                                                                       (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                          GHC.Base.String
                                                                          (Control.Monad.Trans.State.Lazy.StateT
                                                                             Graphics.GPipe.Internal.Expr.NextTempVar
                                                                             GHC.Types.IO))))
                                                                 [GHC.Base.String]),
                                                              Graphics.GPipe.Internal.Expr.ExprState),
                                                             GHC.Base.String)>_N))
                                                 (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                           <GHC.Base.String>_N
                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                              GHC.Types.IO>_R
                                                           <((GHC.Base.String,
                                                              Data.SNMap.SNMap
                                                                (Data.SNMap.SNMapReaderT
                                                                   [GHC.Base.String]
                                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         GHC.Base.String
                                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                                            GHC.Types.IO))))
                                                                [GHC.Base.String]),
                                                             Graphics.GPipe.Internal.Expr.ExprState)>_N))))
                                  (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                            <Graphics.GPipe.Internal.Expr.ExprState>_N
                                            <Control.Monad.Trans.Writer.Lazy.WriterT
                                               GHC.Base.String
                                               (Control.Monad.Trans.State.Lazy.StateT
                                                  Graphics.GPipe.Internal.Expr.NextTempVar
                                                  GHC.Types.IO)>_R
                                            <(GHC.Base.String,
                                              Data.SNMap.SNMap
                                                (Data.SNMap.SNMapReaderT
                                                   [GHC.Base.String]
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                         GHC.Base.String
                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                            GHC.Types.IO))))
                                                [GHC.Base.String])>_N)))
                        (Trans
                             (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                       <Data.SNMap.SNMap
                                          (Data.SNMap.SNMapReaderT
                                             [GHC.Base.String]
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.ExprState
                                                (Control.Monad.Trans.Writer.Lazy.WriterT
                                                   GHC.Base.String
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.NextTempVar
                                                      GHC.Types.IO))))
                                          [GHC.Base.String]>_N
                                       <Control.Monad.Trans.State.Lazy.StateT
                                          Graphics.GPipe.Internal.Expr.ExprState
                                          (Control.Monad.Trans.Writer.Lazy.WriterT
                                             GHC.Base.String
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.NextTempVar
                                                GHC.Types.IO))>_R
                                       <GHC.Base.String>_N))
                             (Trans
                                  (Sym (Data.SNMap.N:SNMapReaderT[0]
                                            <[GHC.Base.String]>_N
                                            <Control.Monad.Trans.State.Lazy.StateT
                                               Graphics.GPipe.Internal.Expr.ExprState
                                               (Control.Monad.Trans.Writer.Lazy.WriterT
                                                  GHC.Base.String
                                                  (Control.Monad.Trans.State.Lazy.StateT
                                                     Graphics.GPipe.Internal.Expr.NextTempVar
                                                     GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                  (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                            <Graphics.GPipe.Internal.Expr.V>_P
                                            <GHC.Types.Float>_P)))))) -}
925a07cd473211a45e5a1d414398db2c
  rotation2 ::
    Data.SNMap.SNMap
      (Data.SNMap.SNMapReaderT
         [GHC.Base.String]
         (Control.Monad.Trans.State.Lazy.StateT
            Graphics.GPipe.Internal.Expr.ExprState
            (Control.Monad.Trans.Writer.Lazy.WriterT
               GHC.Base.String
               (Control.Monad.Trans.State.Lazy.StateT
                  Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
      [GHC.Base.String]
    -> Graphics.GPipe.Internal.Expr.ExprState
    -> Graphics.GPipe.Internal.Expr.NextTempVar
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((((GHC.Base.String,
              Data.SNMap.SNMap
                (Data.SNMap.SNMapReaderT
                   [GHC.Base.String]
                   (Control.Monad.Trans.State.Lazy.StateT
                      Graphics.GPipe.Internal.Expr.ExprState
                      (Control.Monad.Trans.Writer.Lazy.WriterT
                         GHC.Base.String
                         (Control.Monad.Trans.State.Lazy.StateT
                            Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                [GHC.Base.String]),
             Graphics.GPipe.Internal.Expr.ExprState),
            [GHC.Types.Char]),
           Graphics.GPipe.Internal.Expr.NextTempVar) #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (eta6 :: Data.SNMap.SNMap
                              (Data.SNMap.SNMapReaderT
                                 [GHC.Base.String]
                                 (Control.Monad.Trans.State.Lazy.StateT
                                    Graphics.GPipe.Internal.Expr.ExprState
                                    (Control.Monad.Trans.Writer.Lazy.WriterT
                                       GHC.Base.String
                                       (Control.Monad.Trans.State.Lazy.StateT
                                          Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                              [GHC.Base.String])
                   (eta7 :: Graphics.GPipe.Internal.Expr.ExprState)
                   (eta8 :: Graphics.GPipe.Internal.Expr.NextTempVar)
                   (eta9 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta9,
                    ((((Main.rotation_eta5, eta6), eta7),
                      GHC.Types.[] @ GHC.Types.Char),
                     eta8) #)) -}
58468f95f4c42a2d4a59a74a2f1ecb98
  rotation3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
2e0949df3b8f0d14f466903b083b49c3
  rotation4 ::
    Data.SNMap.SNMap
      (Data.SNMap.SNMapReaderT
         [GHC.Base.String]
         (Control.Monad.Trans.State.Lazy.StateT
            Graphics.GPipe.Internal.Expr.ExprState
            (Control.Monad.Trans.Writer.Lazy.WriterT
               GHC.Base.String
               (Control.Monad.Trans.State.Lazy.StateT
                  Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
      [GHC.Base.String]
    -> Graphics.GPipe.Internal.Expr.ExprState
    -> Graphics.GPipe.Internal.Expr.NextTempVar
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((((GHC.Base.String,
              Data.SNMap.SNMap
                (Data.SNMap.SNMapReaderT
                   [GHC.Base.String]
                   (Control.Monad.Trans.State.Lazy.StateT
                      Graphics.GPipe.Internal.Expr.ExprState
                      (Control.Monad.Trans.Writer.Lazy.WriterT
                         GHC.Base.String
                         (Control.Monad.Trans.State.Lazy.StateT
                            Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                [GHC.Base.String]),
             Graphics.GPipe.Internal.Expr.ExprState),
            [GHC.Types.Char]),
           Graphics.GPipe.Internal.Expr.NextTempVar) #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (eta6 :: Data.SNMap.SNMap
                              (Data.SNMap.SNMapReaderT
                                 [GHC.Base.String]
                                 (Control.Monad.Trans.State.Lazy.StateT
                                    Graphics.GPipe.Internal.Expr.ExprState
                                    (Control.Monad.Trans.Writer.Lazy.WriterT
                                       GHC.Base.String
                                       (Control.Monad.Trans.State.Lazy.StateT
                                          Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                              [GHC.Base.String])
                   (eta7 :: Graphics.GPipe.Internal.Expr.ExprState)
                   (eta8 :: Graphics.GPipe.Internal.Expr.NextTempVar)
                   (eta9 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta9,
                    ((((Main.rotation_eta1, eta6), eta7),
                      GHC.Types.[] @ GHC.Types.Char),
                     eta8) #)) -}
016dff4f4dab6a80f36ad1613c5b80d5
  rotation5 ::
    Linear.V4.V4
      (Graphics.GPipe.Internal.Expr.S
         Graphics.GPipe.Internal.Expr.V GHC.Types.Float)
  {- Strictness: m,
     Unfolding: (Linear.V4.V4
                   @ (Graphics.GPipe.Internal.Expr.S
                        Graphics.GPipe.Internal.Expr.V GHC.Types.Float)
                   Main.rotation4
                     `cast`
                   (Trans
                        (<Data.SNMap.SNMap
                            (Data.SNMap.SNMapReaderT
                               [GHC.Base.String]
                               (Control.Monad.Trans.State.Lazy.StateT
                                  Graphics.GPipe.Internal.Expr.ExprState
                                  (Control.Monad.Trans.Writer.Lazy.WriterT
                                     GHC.Base.String
                                     (Control.Monad.Trans.State.Lazy.StateT
                                        Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                            [GHC.Base.String]>_R
                         ->_R Trans
                                  (<Graphics.GPipe.Internal.Expr.ExprState>_R
                                   ->_R Trans
                                            (<Graphics.GPipe.Internal.Expr.NextTempVar>_R
                                             ->_R Sym (GHC.Types.N:IO[0]
                                                           <((((GHC.Base.String,
                                                                Data.SNMap.SNMap
                                                                  (Data.SNMap.SNMapReaderT
                                                                     [GHC.Base.String]
                                                                     (Control.Monad.Trans.State.Lazy.StateT
                                                                        Graphics.GPipe.Internal.Expr.ExprState
                                                                        (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                           GHC.Base.String
                                                                           (Control.Monad.Trans.State.Lazy.StateT
                                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                                              GHC.Types.IO))))
                                                                  [GHC.Base.String]),
                                                               Graphics.GPipe.Internal.Expr.ExprState),
                                                              GHC.Base.String),
                                                             Graphics.GPipe.Internal.Expr.NextTempVar)>_R))
                                            (Trans
                                                 (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                           <Graphics.GPipe.Internal.Expr.NextTempVar>_N
                                                           <GHC.Types.IO>_R
                                                           <(((GHC.Base.String,
                                                               Data.SNMap.SNMap
                                                                 (Data.SNMap.SNMapReaderT
                                                                    [GHC.Base.String]
                                                                    (Control.Monad.Trans.State.Lazy.StateT
                                                                       Graphics.GPipe.Internal.Expr.ExprState
                                                                       (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                          GHC.Base.String
                                                                          (Control.Monad.Trans.State.Lazy.StateT
                                                                             Graphics.GPipe.Internal.Expr.NextTempVar
                                                                             GHC.Types.IO))))
                                                                 [GHC.Base.String]),
                                                              Graphics.GPipe.Internal.Expr.ExprState),
                                                             GHC.Base.String)>_N))
                                                 (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                           <GHC.Base.String>_N
                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                              GHC.Types.IO>_R
                                                           <((GHC.Base.String,
                                                              Data.SNMap.SNMap
                                                                (Data.SNMap.SNMapReaderT
                                                                   [GHC.Base.String]
                                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         GHC.Base.String
                                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                                            GHC.Types.IO))))
                                                                [GHC.Base.String]),
                                                             Graphics.GPipe.Internal.Expr.ExprState)>_N))))
                                  (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                            <Graphics.GPipe.Internal.Expr.ExprState>_N
                                            <Control.Monad.Trans.Writer.Lazy.WriterT
                                               GHC.Base.String
                                               (Control.Monad.Trans.State.Lazy.StateT
                                                  Graphics.GPipe.Internal.Expr.NextTempVar
                                                  GHC.Types.IO)>_R
                                            <(GHC.Base.String,
                                              Data.SNMap.SNMap
                                                (Data.SNMap.SNMapReaderT
                                                   [GHC.Base.String]
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                         GHC.Base.String
                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                            GHC.Types.IO))))
                                                [GHC.Base.String])>_N)))
                        (Trans
                             (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                       <Data.SNMap.SNMap
                                          (Data.SNMap.SNMapReaderT
                                             [GHC.Base.String]
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.ExprState
                                                (Control.Monad.Trans.Writer.Lazy.WriterT
                                                   GHC.Base.String
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.NextTempVar
                                                      GHC.Types.IO))))
                                          [GHC.Base.String]>_N
                                       <Control.Monad.Trans.State.Lazy.StateT
                                          Graphics.GPipe.Internal.Expr.ExprState
                                          (Control.Monad.Trans.Writer.Lazy.WriterT
                                             GHC.Base.String
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.NextTempVar
                                                GHC.Types.IO))>_R
                                       <GHC.Base.String>_N))
                             (Trans
                                  (Sym (Data.SNMap.N:SNMapReaderT[0]
                                            <[GHC.Base.String]>_N
                                            <Control.Monad.Trans.State.Lazy.StateT
                                               Graphics.GPipe.Internal.Expr.ExprState
                                               (Control.Monad.Trans.Writer.Lazy.WriterT
                                                  GHC.Base.String
                                                  (Control.Monad.Trans.State.Lazy.StateT
                                                     Graphics.GPipe.Internal.Expr.NextTempVar
                                                     GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                  (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                            <Graphics.GPipe.Internal.Expr.V>_P
                                            <GHC.Types.Float>_P)))))
                   Main.rotation4
                     `cast`
                   (Trans
                        (<Data.SNMap.SNMap
                            (Data.SNMap.SNMapReaderT
                               [GHC.Base.String]
                               (Control.Monad.Trans.State.Lazy.StateT
                                  Graphics.GPipe.Internal.Expr.ExprState
                                  (Control.Monad.Trans.Writer.Lazy.WriterT
                                     GHC.Base.String
                                     (Control.Monad.Trans.State.Lazy.StateT
                                        Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                            [GHC.Base.String]>_R
                         ->_R Trans
                                  (<Graphics.GPipe.Internal.Expr.ExprState>_R
                                   ->_R Trans
                                            (<Graphics.GPipe.Internal.Expr.NextTempVar>_R
                                             ->_R Sym (GHC.Types.N:IO[0]
                                                           <((((GHC.Base.String,
                                                                Data.SNMap.SNMap
                                                                  (Data.SNMap.SNMapReaderT
                                                                     [GHC.Base.String]
                                                                     (Control.Monad.Trans.State.Lazy.StateT
                                                                        Graphics.GPipe.Internal.Expr.ExprState
                                                                        (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                           GHC.Base.String
                                                                           (Control.Monad.Trans.State.Lazy.StateT
                                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                                              GHC.Types.IO))))
                                                                  [GHC.Base.String]),
                                                               Graphics.GPipe.Internal.Expr.ExprState),
                                                              GHC.Base.String),
                                                             Graphics.GPipe.Internal.Expr.NextTempVar)>_R))
                                            (Trans
                                                 (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                           <Graphics.GPipe.Internal.Expr.NextTempVar>_N
                                                           <GHC.Types.IO>_R
                                                           <(((GHC.Base.String,
                                                               Data.SNMap.SNMap
                                                                 (Data.SNMap.SNMapReaderT
                                                                    [GHC.Base.String]
                                                                    (Control.Monad.Trans.State.Lazy.StateT
                                                                       Graphics.GPipe.Internal.Expr.ExprState
                                                                       (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                          GHC.Base.String
                                                                          (Control.Monad.Trans.State.Lazy.StateT
                                                                             Graphics.GPipe.Internal.Expr.NextTempVar
                                                                             GHC.Types.IO))))
                                                                 [GHC.Base.String]),
                                                              Graphics.GPipe.Internal.Expr.ExprState),
                                                             GHC.Base.String)>_N))
                                                 (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                           <GHC.Base.String>_N
                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                              GHC.Types.IO>_R
                                                           <((GHC.Base.String,
                                                              Data.SNMap.SNMap
                                                                (Data.SNMap.SNMapReaderT
                                                                   [GHC.Base.String]
                                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         GHC.Base.String
                                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                                            GHC.Types.IO))))
                                                                [GHC.Base.String]),
                                                             Graphics.GPipe.Internal.Expr.ExprState)>_N))))
                                  (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                            <Graphics.GPipe.Internal.Expr.ExprState>_N
                                            <Control.Monad.Trans.Writer.Lazy.WriterT
                                               GHC.Base.String
                                               (Control.Monad.Trans.State.Lazy.StateT
                                                  Graphics.GPipe.Internal.Expr.NextTempVar
                                                  GHC.Types.IO)>_R
                                            <(GHC.Base.String,
                                              Data.SNMap.SNMap
                                                (Data.SNMap.SNMapReaderT
                                                   [GHC.Base.String]
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                         GHC.Base.String
                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                            GHC.Types.IO))))
                                                [GHC.Base.String])>_N)))
                        (Trans
                             (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                       <Data.SNMap.SNMap
                                          (Data.SNMap.SNMapReaderT
                                             [GHC.Base.String]
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.ExprState
                                                (Control.Monad.Trans.Writer.Lazy.WriterT
                                                   GHC.Base.String
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.NextTempVar
                                                      GHC.Types.IO))))
                                          [GHC.Base.String]>_N
                                       <Control.Monad.Trans.State.Lazy.StateT
                                          Graphics.GPipe.Internal.Expr.ExprState
                                          (Control.Monad.Trans.Writer.Lazy.WriterT
                                             GHC.Base.String
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.NextTempVar
                                                GHC.Types.IO))>_R
                                       <GHC.Base.String>_N))
                             (Trans
                                  (Sym (Data.SNMap.N:SNMapReaderT[0]
                                            <[GHC.Base.String]>_N
                                            <Control.Monad.Trans.State.Lazy.StateT
                                               Graphics.GPipe.Internal.Expr.ExprState
                                               (Control.Monad.Trans.Writer.Lazy.WriterT
                                                  GHC.Base.String
                                                  (Control.Monad.Trans.State.Lazy.StateT
                                                     Graphics.GPipe.Internal.Expr.NextTempVar
                                                     GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                  (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                            <Graphics.GPipe.Internal.Expr.V>_P
                                            <GHC.Types.Float>_P)))))
                   Main.rotation2
                     `cast`
                   (Trans
                        (<Data.SNMap.SNMap
                            (Data.SNMap.SNMapReaderT
                               [GHC.Base.String]
                               (Control.Monad.Trans.State.Lazy.StateT
                                  Graphics.GPipe.Internal.Expr.ExprState
                                  (Control.Monad.Trans.Writer.Lazy.WriterT
                                     GHC.Base.String
                                     (Control.Monad.Trans.State.Lazy.StateT
                                        Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                            [GHC.Base.String]>_R
                         ->_R Trans
                                  (<Graphics.GPipe.Internal.Expr.ExprState>_R
                                   ->_R Trans
                                            (<Graphics.GPipe.Internal.Expr.NextTempVar>_R
                                             ->_R Sym (GHC.Types.N:IO[0]
                                                           <((((GHC.Base.String,
                                                                Data.SNMap.SNMap
                                                                  (Data.SNMap.SNMapReaderT
                                                                     [GHC.Base.String]
                                                                     (Control.Monad.Trans.State.Lazy.StateT
                                                                        Graphics.GPipe.Internal.Expr.ExprState
                                                                        (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                           GHC.Base.String
                                                                           (Control.Monad.Trans.State.Lazy.StateT
                                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                                              GHC.Types.IO))))
                                                                  [GHC.Base.String]),
                                                               Graphics.GPipe.Internal.Expr.ExprState),
                                                              GHC.Base.String),
                                                             Graphics.GPipe.Internal.Expr.NextTempVar)>_R))
                                            (Trans
                                                 (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                           <Graphics.GPipe.Internal.Expr.NextTempVar>_N
                                                           <GHC.Types.IO>_R
                                                           <(((GHC.Base.String,
                                                               Data.SNMap.SNMap
                                                                 (Data.SNMap.SNMapReaderT
                                                                    [GHC.Base.String]
                                                                    (Control.Monad.Trans.State.Lazy.StateT
                                                                       Graphics.GPipe.Internal.Expr.ExprState
                                                                       (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                          GHC.Base.String
                                                                          (Control.Monad.Trans.State.Lazy.StateT
                                                                             Graphics.GPipe.Internal.Expr.NextTempVar
                                                                             GHC.Types.IO))))
                                                                 [GHC.Base.String]),
                                                              Graphics.GPipe.Internal.Expr.ExprState),
                                                             GHC.Base.String)>_N))
                                                 (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                           <GHC.Base.String>_N
                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                              GHC.Types.IO>_R
                                                           <((GHC.Base.String,
                                                              Data.SNMap.SNMap
                                                                (Data.SNMap.SNMapReaderT
                                                                   [GHC.Base.String]
                                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         GHC.Base.String
                                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                                            GHC.Types.IO))))
                                                                [GHC.Base.String]),
                                                             Graphics.GPipe.Internal.Expr.ExprState)>_N))))
                                  (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                            <Graphics.GPipe.Internal.Expr.ExprState>_N
                                            <Control.Monad.Trans.Writer.Lazy.WriterT
                                               GHC.Base.String
                                               (Control.Monad.Trans.State.Lazy.StateT
                                                  Graphics.GPipe.Internal.Expr.NextTempVar
                                                  GHC.Types.IO)>_R
                                            <(GHC.Base.String,
                                              Data.SNMap.SNMap
                                                (Data.SNMap.SNMapReaderT
                                                   [GHC.Base.String]
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                         GHC.Base.String
                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                            GHC.Types.IO))))
                                                [GHC.Base.String])>_N)))
                        (Trans
                             (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                       <Data.SNMap.SNMap
                                          (Data.SNMap.SNMapReaderT
                                             [GHC.Base.String]
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.ExprState
                                                (Control.Monad.Trans.Writer.Lazy.WriterT
                                                   GHC.Base.String
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.NextTempVar
                                                      GHC.Types.IO))))
                                          [GHC.Base.String]>_N
                                       <Control.Monad.Trans.State.Lazy.StateT
                                          Graphics.GPipe.Internal.Expr.ExprState
                                          (Control.Monad.Trans.Writer.Lazy.WriterT
                                             GHC.Base.String
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.NextTempVar
                                                GHC.Types.IO))>_R
                                       <GHC.Base.String>_N))
                             (Trans
                                  (Sym (Data.SNMap.N:SNMapReaderT[0]
                                            <[GHC.Base.String]>_N
                                            <Control.Monad.Trans.State.Lazy.StateT
                                               Graphics.GPipe.Internal.Expr.ExprState
                                               (Control.Monad.Trans.Writer.Lazy.WriterT
                                                  GHC.Base.String
                                                  (Control.Monad.Trans.State.Lazy.StateT
                                                     Graphics.GPipe.Internal.Expr.NextTempVar
                                                     GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                  (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                            <Graphics.GPipe.Internal.Expr.V>_P
                                            <GHC.Types.Float>_P)))))
                   Main.rotation4
                     `cast`
                   (Trans
                        (<Data.SNMap.SNMap
                            (Data.SNMap.SNMapReaderT
                               [GHC.Base.String]
                               (Control.Monad.Trans.State.Lazy.StateT
                                  Graphics.GPipe.Internal.Expr.ExprState
                                  (Control.Monad.Trans.Writer.Lazy.WriterT
                                     GHC.Base.String
                                     (Control.Monad.Trans.State.Lazy.StateT
                                        Graphics.GPipe.Internal.Expr.NextTempVar GHC.Types.IO))))
                            [GHC.Base.String]>_R
                         ->_R Trans
                                  (<Graphics.GPipe.Internal.Expr.ExprState>_R
                                   ->_R Trans
                                            (<Graphics.GPipe.Internal.Expr.NextTempVar>_R
                                             ->_R Sym (GHC.Types.N:IO[0]
                                                           <((((GHC.Base.String,
                                                                Data.SNMap.SNMap
                                                                  (Data.SNMap.SNMapReaderT
                                                                     [GHC.Base.String]
                                                                     (Control.Monad.Trans.State.Lazy.StateT
                                                                        Graphics.GPipe.Internal.Expr.ExprState
                                                                        (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                           GHC.Base.String
                                                                           (Control.Monad.Trans.State.Lazy.StateT
                                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                                              GHC.Types.IO))))
                                                                  [GHC.Base.String]),
                                                               Graphics.GPipe.Internal.Expr.ExprState),
                                                              GHC.Base.String),
                                                             Graphics.GPipe.Internal.Expr.NextTempVar)>_R))
                                            (Trans
                                                 (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                           <Graphics.GPipe.Internal.Expr.NextTempVar>_N
                                                           <GHC.Types.IO>_R
                                                           <(((GHC.Base.String,
                                                               Data.SNMap.SNMap
                                                                 (Data.SNMap.SNMapReaderT
                                                                    [GHC.Base.String]
                                                                    (Control.Monad.Trans.State.Lazy.StateT
                                                                       Graphics.GPipe.Internal.Expr.ExprState
                                                                       (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                          GHC.Base.String
                                                                          (Control.Monad.Trans.State.Lazy.StateT
                                                                             Graphics.GPipe.Internal.Expr.NextTempVar
                                                                             GHC.Types.IO))))
                                                                 [GHC.Base.String]),
                                                              Graphics.GPipe.Internal.Expr.ExprState),
                                                             GHC.Base.String)>_N))
                                                 (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                           <GHC.Base.String>_N
                                                           <Control.Monad.Trans.State.Lazy.StateT
                                                              Graphics.GPipe.Internal.Expr.NextTempVar
                                                              GHC.Types.IO>_R
                                                           <((GHC.Base.String,
                                                              Data.SNMap.SNMap
                                                                (Data.SNMap.SNMapReaderT
                                                                   [GHC.Base.String]
                                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         GHC.Base.String
                                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                                            GHC.Types.IO))))
                                                                [GHC.Base.String]),
                                                             Graphics.GPipe.Internal.Expr.ExprState)>_N))))
                                  (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                            <Graphics.GPipe.Internal.Expr.ExprState>_N
                                            <Control.Monad.Trans.Writer.Lazy.WriterT
                                               GHC.Base.String
                                               (Control.Monad.Trans.State.Lazy.StateT
                                                  Graphics.GPipe.Internal.Expr.NextTempVar
                                                  GHC.Types.IO)>_R
                                            <(GHC.Base.String,
                                              Data.SNMap.SNMap
                                                (Data.SNMap.SNMapReaderT
                                                   [GHC.Base.String]
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.ExprState
                                                      (Control.Monad.Trans.Writer.Lazy.WriterT
                                                         GHC.Base.String
                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                            Graphics.GPipe.Internal.Expr.NextTempVar
                                                            GHC.Types.IO))))
                                                [GHC.Base.String])>_N)))
                        (Trans
                             (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                       <Data.SNMap.SNMap
                                          (Data.SNMap.SNMapReaderT
                                             [GHC.Base.String]
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.ExprState
                                                (Control.Monad.Trans.Writer.Lazy.WriterT
                                                   GHC.Base.String
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Graphics.GPipe.Internal.Expr.NextTempVar
                                                      GHC.Types.IO))))
                                          [GHC.Base.String]>_N
                                       <Control.Monad.Trans.State.Lazy.StateT
                                          Graphics.GPipe.Internal.Expr.ExprState
                                          (Control.Monad.Trans.Writer.Lazy.WriterT
                                             GHC.Base.String
                                             (Control.Monad.Trans.State.Lazy.StateT
                                                Graphics.GPipe.Internal.Expr.NextTempVar
                                                GHC.Types.IO))>_R
                                       <GHC.Base.String>_N))
                             (Trans
                                  (Sym (Data.SNMap.N:SNMapReaderT[0]
                                            <[GHC.Base.String]>_N
                                            <Control.Monad.Trans.State.Lazy.StateT
                                               Graphics.GPipe.Internal.Expr.ExprState
                                               (Control.Monad.Trans.Writer.Lazy.WriterT
                                                  GHC.Base.String
                                                  (Control.Monad.Trans.State.Lazy.StateT
                                                     Graphics.GPipe.Internal.Expr.NextTempVar
                                                     GHC.Types.IO))>_N) <GHC.Base.String>_N)
                                  (Sym (Graphics.GPipe.Internal.Expr.N:S[0]
                                            <Graphics.GPipe.Internal.Expr.V>_P
                                            <GHC.Types.Float>_P)))))) -}
fd237156b3e5d5e58e60765e3b9ad6ea
  rotation_eta1 :: GHC.Base.String
  {- Unfolding: (case GHC.Show.$w$cshowsPrec3
                        0#
                        Main.planeXY1
                        (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                 GHC.Types.: @ GHC.Types.Char ww3 ww4 }) -}
98d5cc1d8645950f3b8253b4b997bd5e
  rotation_eta5 :: GHC.Base.String
  {- Unfolding: (case GHC.Show.$w$cshowsPrec3
                        0#
                        Main.rotation3
                        (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                 GHC.Types.: @ GHC.Types.Char ww3 ww4 }) -}
a87fd89fc1e80aeaa69de85dbf72bf83
  tick ::
    (Graphics.GPipe.Internal.Buffer.HostFormat b1
     GHC.Prim.~# Linear.Matrix.M44 a,
     Main.HasMatrixUniforms
       b (Graphics.GPipe.Internal.Buffer.Buffer os b1),
     Main.HasMatrixValues b [Linear.Matrix.M44 a],
     Main.HasRasterOptions
       b
       (Graphics.GPipe.Internal.FragmentStream.Side,
        Graphics.GPipe.Internal.FragmentStream.ViewPort,
        Graphics.GPipe.Internal.FragmentStream.DepthRange),
     Main.HasScalarUniforms
       b (Graphics.GPipe.Internal.Buffer.Buffer os b2),
     Main.HasScalarValues
       b [Graphics.GPipe.Internal.Buffer.HostFormat b2],
     Linear.Epsilon.Epsilon a, Control.Monad.IO.Class.MonadIO m,
     GHC.Real.Fractional (Graphics.GPipe.Internal.Buffer.HostFormat b2),
     GHC.Float.Floating a) =>
    b
    -> Graphics.GPipe.Internal.Context.ContextT
         Graphics.GPipe.Context.GLFW.Resource.GLFWWindow os f m b
  {- Arity: 10,
     Strictness: <L,U><L,1*C1(U)><L,C(U)><L,1*C1(U)><L,1*C1(U)><L,C(U)><L,U(U,C(U))><L,U(U,C(U))><L,U(1*U,C(C1(U)),A,C(U))><L,U(U(U,U,U,U),U,A,A,C(U),A,A,C(U),C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A)> -}
8983c47abc2cecd54627ab78068d6e4f
  triangles :: [a] -> [a]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [a]) ->
                 case ds of wild {
                   [] -> Main.triangles1 @ a
                   : a1 rest
                   -> letrec {
                        go9 :: [a] -> [a] -> [a] {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
                        = \ (ds1 :: [a]) (_ys :: [a]) ->
                          case ds1 of wild1 {
                            [] -> GHC.Types.[] @ a
                            : ipv ipv1
                            -> case _ys of wild2 {
                                 [] -> GHC.Types.[] @ a
                                 : ipv2 ipv3
                                 -> GHC.Base.++
                                      @ a
                                      (GHC.Types.:
                                         @ a
                                         a1
                                         (GHC.Types.:
                                            @ a
                                            ipv
                                            (GHC.Types.: @ a ipv2 (GHC.Types.[] @ a))))
                                      (go9 ipv1 ipv3) } }
                      } in
                      go9 rest (Main.$wunsafeDrop @ a 1# rest) }) -}
c55ed9f7a06642fad735e4e711b89950
  triangles1 :: [a]
  {- Strictness: x -}
instance Main.HasMatrixUniforms [Main.App,
                                 Graphics.GPipe.Internal.Buffer.Buffer]
  = Main.$fHasMatrixUniformsAppBuffer
instance Main.HasMatrixValues [Main.App, []]
  = Main.$fHasMatrixValuesApp[]
instance Main.HasPrimitiveArray [Main.ShaderData,
                                 Graphics.GPipe.Internal.PrimitiveArray.PrimitiveArray]
  = Main.$fHasPrimitiveArrayShaderDataPrimitiveArray
instance Main.HasRasterOptions [Main.App, (,,)]
  = Main.$fHasRasterOptionsApp(,,)
instance Main.HasRasterOptions [Main.ShaderData, (,,)]
  = Main.$fHasRasterOptionsShaderData(,,)
instance Main.HasScalarUniforms [Main.App,
                                 Graphics.GPipe.Internal.Buffer.Buffer]
  = Main.$fHasScalarUniformsAppBuffer
instance Main.HasScalarValues [Main.App, []]
  = Main.$fHasScalarValuesApp[]
instance Graphics.WaveFront.Lenses.HasVertices [Main.App,
                                                Graphics.GPipe.Internal.Buffer.Buffer]
  = Main.$fHasVerticesAppBuffer
"SPEC/Main $fBufferFormat(,) @ (B4 Float) @ (B2 Float)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                             (Graphics.GPipe.Internal.Buffer.B4
                                                                                                GHC.Types.Float))
                                                                        ($dBufferFormat1 :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                              (Graphics.GPipe.Internal.Buffer.B2
                                                                                                 GHC.Types.Float))
  Graphics.GPipe.Internal.Buffer.$fBufferFormat(,) @ (Graphics.GPipe.Internal.Buffer.B4
                                                        GHC.Types.Float)
                                                   @ (Graphics.GPipe.Internal.Buffer.B2
                                                        GHC.Types.Float)
                                                   $dBufferFormat
                                                   $dBufferFormat1
  = Main.$s$fBufferFormat(,)
"SPEC/Main $fBufferFormat(,)_$cgetGlPaddedFormat @ (B4 Float) @ (B2
                                                                  Float)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                                                                                                                   (Graphics.GPipe.Internal.Buffer.B4
                                                                                                                                                                                      GHC.Types.Float))
                                                                                                                                                              ($dBufferFormat1 :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                                                                                                                    (Graphics.GPipe.Internal.Buffer.B2
                                                                                                                                                                                       GHC.Types.Float))
  Graphics.GPipe.Internal.Buffer.$fBufferFormat(,)_$cgetGlPaddedFormat @ (Graphics.GPipe.Internal.Buffer.B4
                                                                            GHC.Types.Float)
                                                                       @ (Graphics.GPipe.Internal.Buffer.B2
                                                                            GHC.Types.Float)
                                                                       $dBufferFormat
                                                                       $dBufferFormat1
  = Main.$s$fBufferFormat(,)_$s$fBufferFormat(,)_$cgetGlPaddedFormat
"SPEC/Main $fBufferFormat(,)_$cgetGlType @ (B4 Float) @ (B2 Float)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                                         (Graphics.GPipe.Internal.Buffer.B4
                                                                                                            GHC.Types.Float))
                                                                                    ($dBufferFormat1 :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                                          (Graphics.GPipe.Internal.Buffer.B2
                                                                                                             GHC.Types.Float))
  Graphics.GPipe.Internal.Buffer.$fBufferFormat(,)_$cgetGlType @ (Graphics.GPipe.Internal.Buffer.B4
                                                                    GHC.Types.Float)
                                                               @ (Graphics.GPipe.Internal.Buffer.B2
                                                                    GHC.Types.Float)
                                                               $dBufferFormat
                                                               $dBufferFormat1
  = Main.$s$fBufferFormat(,)_$s$fBufferFormat(,)_$cgetGlType
"SPEC/Main $fBufferFormat(,)_$cpeekPixel @ (B4 Float) @ (B2 Float)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                                         (Graphics.GPipe.Internal.Buffer.B4
                                                                                                            GHC.Types.Float))
                                                                                    ($dBufferFormat1 :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                                          (Graphics.GPipe.Internal.Buffer.B2
                                                                                                             GHC.Types.Float))
  Graphics.GPipe.Internal.Buffer.$fBufferFormat(,)_$cpeekPixel @ (Graphics.GPipe.Internal.Buffer.B4
                                                                    GHC.Types.Float)
                                                               @ (Graphics.GPipe.Internal.Buffer.B2
                                                                    GHC.Types.Float)
                                                               $dBufferFormat
                                                               $dBufferFormat1
  = Main.$s$fBufferFormat(,)_$s$fBufferFormat(,)_$cpeekPixel
"SPEC/Main $fBufferFormatNormalized @ (B3 Word8)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                       (Graphics.GPipe.Internal.Buffer.B3
                                                                                          GHC.Word.Word8))
  Graphics.GPipe.Internal.Buffer.$fBufferFormatNormalized @ (Graphics.GPipe.Internal.Buffer.B3
                                                               GHC.Word.Word8)
                                                          $dBufferFormat
  = Main.$s$fBufferFormatNormalized
"SPEC/Main $fBufferFormatNormalized_$cgetGlType @ (B3 Word8)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                                   (Graphics.GPipe.Internal.Buffer.B3
                                                                                                      GHC.Word.Word8))
  Graphics.GPipe.Internal.Buffer.$fBufferFormatNormalized_$cgetGlType @ (Graphics.GPipe.Internal.Buffer.B3
                                                                           GHC.Word.Word8)
                                                                      $dBufferFormat
  = Main.$s$fBufferFormatNormalized_$s$fBufferFormatNormalized_$cgetGlType
"SPEC/Main $fBufferFormatNormalized_$cpeekPixel @ (B3 Word8)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                                   (Graphics.GPipe.Internal.Buffer.B3
                                                                                                      GHC.Word.Word8))
  Graphics.GPipe.Internal.Buffer.$fBufferFormatNormalized_$cpeekPixel @ (Graphics.GPipe.Internal.Buffer.B3
                                                                           GHC.Word.Word8)
                                                                      $dBufferFormat
  = Main.$s$fBufferFormatNormalized_$s$fBufferFormatNormalized_$cpeekPixel
"SPEC/Main $fBufferFormatUniform @ (B Float)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                   (Graphics.GPipe.Internal.Buffer.B
                                                                                      GHC.Types.Float))
  Graphics.GPipe.Internal.Buffer.$fBufferFormatUniform @ (Graphics.GPipe.Internal.Buffer.B
                                                            GHC.Types.Float)
                                                       $dBufferFormat
  = Main.$s$fBufferFormatUniform3
"SPEC/Main $fBufferFormatUniform @ (V4 (V4 (B Float)))" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                             (Linear.V4.V4
                                                                                                (Linear.V4.V4
                                                                                                   (Graphics.GPipe.Internal.Buffer.B
                                                                                                      GHC.Types.Float))))
  Graphics.GPipe.Internal.Buffer.$fBufferFormatUniform @ (Linear.V4.V4
                                                            (Linear.V4.V4
                                                               (Graphics.GPipe.Internal.Buffer.B
                                                                  GHC.Types.Float)))
                                                       $dBufferFormat
  = Main.$s$fBufferFormatUniform
"SPEC/Main $fBufferFormatUniform_$cgetGlPaddedFormat @ (B Float)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                                       (Graphics.GPipe.Internal.Buffer.B
                                                                                                          GHC.Types.Float))
  Graphics.GPipe.Internal.Buffer.$fBufferFormatUniform_$cgetGlPaddedFormat @ (Graphics.GPipe.Internal.Buffer.B
                                                                                GHC.Types.Float)
                                                                           $dBufferFormat
  = Main.$s$fBufferFormatUniform_$s$fBufferFormatUniform_$cgetGlPaddedFormat
"SPEC/Main $fBufferFormatUniform_$cgetGlType @ (B Float)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                               (Graphics.GPipe.Internal.Buffer.B
                                                                                                  GHC.Types.Float))
  Graphics.GPipe.Internal.Buffer.$fBufferFormatUniform_$cgetGlType @ (Graphics.GPipe.Internal.Buffer.B
                                                                        GHC.Types.Float)
                                                                   $dBufferFormat
  = Main.$s$fBufferFormatUniform_$s$fBufferFormatUniform_$cgetGlType
"SPEC/Main $fBufferFormatUniform_$cpeekPixel @ (B Float)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                               (Graphics.GPipe.Internal.Buffer.B
                                                                                                  GHC.Types.Float))
  Graphics.GPipe.Internal.Buffer.$fBufferFormatUniform_$cpeekPixel @ (Graphics.GPipe.Internal.Buffer.B
                                                                        GHC.Types.Float)
                                                                   $dBufferFormat
  = Main.$s$fBufferFormatUniform_$s$fBufferFormatUniform_$cpeekPixel
"SPEC/Main $fBufferFormatV4 @ (B Float)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                              (Graphics.GPipe.Internal.Buffer.B
                                                                                 GHC.Types.Float))
  Graphics.GPipe.Internal.Buffer.$fBufferFormatV4 @ (Graphics.GPipe.Internal.Buffer.B
                                                       GHC.Types.Float)
                                                  $dBufferFormat
  = Main.$s$fBufferFormatUniform_$s$fBufferFormatV1
"SPEC/Main $fBufferFormatV4 @ (V4 (B Float))" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                   (Linear.V4.V4
                                                                                      (Graphics.GPipe.Internal.Buffer.B
                                                                                         GHC.Types.Float)))
  Graphics.GPipe.Internal.Buffer.$fBufferFormatV4 @ (Linear.V4.V4
                                                       (Graphics.GPipe.Internal.Buffer.B
                                                          GHC.Types.Float))
                                                  $dBufferFormat
  = Main.$s$fBufferFormatUniform_$s$fBufferFormatV4
"SPEC/Main $fBufferFormatV4_$cgetGlPaddedFormat @ (B Float)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                                  (Graphics.GPipe.Internal.Buffer.B
                                                                                                     GHC.Types.Float))
  Graphics.GPipe.Internal.Buffer.$fBufferFormatV4_$cgetGlPaddedFormat @ (Graphics.GPipe.Internal.Buffer.B
                                                                           GHC.Types.Float)
                                                                      $dBufferFormat
  = Main.$s$fBufferFormatUniform_$s$fBufferFormatV4_$cgetGlPaddedFormat
"SPEC/Main $fBufferFormatV4_$cgetGlType @ (B Float)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                          (Graphics.GPipe.Internal.Buffer.B
                                                                                             GHC.Types.Float))
  Graphics.GPipe.Internal.Buffer.$fBufferFormatV4_$cgetGlType @ (Graphics.GPipe.Internal.Buffer.B
                                                                   GHC.Types.Float)
                                                              $dBufferFormat
  = Main.$s$fBufferFormatUniform_$s$fBufferFormatV4_$cgetGlType
"SPEC/Main $fBufferFormatV4_$cpeekPixel @ (B Float)" [ALWAYS] forall ($dBufferFormat :: Graphics.GPipe.Internal.Buffer.BufferFormat
                                                                                          (Graphics.GPipe.Internal.Buffer.B
                                                                                             GHC.Types.Float))
  Graphics.GPipe.Internal.Buffer.$fBufferFormatV4_$cpeekPixel @ (Graphics.GPipe.Internal.Buffer.B
                                                                   GHC.Types.Float)
                                                              $dBufferFormat
  = Main.$s$fBufferFormatUniform_$s$fBufferFormatV4_$cpeekPixel
"SPEC/Main $fShowV3 @ Float" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                          GHC.Types.Float)
  Linear.V3.$fShowV3 @ GHC.Types.Float $dShow
  = Main.$s$fShowBoundingBox_$s$fShowV3
"SPEC/Main $fShowV3_$cshow @ Float" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                 GHC.Types.Float)
  Linear.V3.$fShowV3_$cshow @ GHC.Types.Float $dShow
  = Main.$s$fShowBoundingBox_$s$fShowV3_$cshow
"SPEC/Main $fShowV3_$cshowList @ Float" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                     GHC.Types.Float)
  Linear.V3.$fShowV3_$cshowList @ GHC.Types.Float $dShow
  = Main.$s$fShowBoundingBox_$s$fShowV3_$cshowList
"SPEC/Main $fUniformInputV4 @ (B Float)" [ALWAYS] forall ($dUniformInput :: Graphics.GPipe.Internal.Uniform.UniformInput
                                                                              (Graphics.GPipe.Internal.Buffer.B
                                                                                 GHC.Types.Float))
  Graphics.GPipe.Internal.Uniform.$fUniformInputV4 @ (Graphics.GPipe.Internal.Buffer.B
                                                        GHC.Types.Float)
                                                   $dUniformInput
  = Main.$s$fUniformInputV4
"SPEC/Main $fUniformInputV4 @ (V4 (B Float))" [ALWAYS] forall ($dUniformInput :: Graphics.GPipe.Internal.Uniform.UniformInput
                                                                                   (Linear.V4.V4
                                                                                      (Graphics.GPipe.Internal.Buffer.B
                                                                                         GHC.Types.Float)))
  Graphics.GPipe.Internal.Uniform.$fUniformInputV4 @ (Linear.V4.V4
                                                        (Graphics.GPipe.Internal.Buffer.B
                                                           GHC.Types.Float))
                                                   $dUniformInput
  = Main.$s$fUniformInputV1
"SPEC/Main fromList @ Text" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                        Data.Text.Internal.Text)
  Data.Set.Base.fromList @ Data.Text.Internal.Text $dOrd
  = Main.$sfromList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

